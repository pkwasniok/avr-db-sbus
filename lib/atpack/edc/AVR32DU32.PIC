<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="AVR32DU32" edc:arch="avr8" edc:procid="0x0000" atdf:architecture="AVR8X" atdf:family="AVR" edc:hasFreeze="false">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:minvoltage="1.8" edc:maxvoltage="5.5" edc:nominalvoltage="5.000"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true" edc:haschecksum="false">
    <edc:ProgrammingRowSize edc:progop="cfg" edc:nzsize="1"/>
    <edc:ProgrammingRowSize edc:progop="eedata" edc:nzsize="1"/>
    <edc:ProgrammingRowSize edc:progop="pgm" edc:nzsize="512" edc:addressablesize="512"/>
  </edc:Programming>
  <edc:ArchDef edc:name="avr8" edc:desc="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
      <edc:EEDataMemTraits edc:magicoffset="0x810000"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8">
    <edc:InstructionSet edc:instructionsetid="avr8base"/>
    <edc:InstructionSet edc:instructionsetid="avr8brk"/>
    <edc:InstructionSet edc:instructionsetid="avr8elpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8movw"/>
    <edc:InstructionSet edc:instructionsetid="avr8des"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mega"/>
    <edc:InstructionSet edc:instructionsetid="avr8sram"/>
    <edc:InstructionSet edc:instructionsetid="avr8spmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mul"/>
    <edc:InstructionSet edc:instructionsetid="avr8spm"/>
    <edc:InstructionSet edc:instructionsetid="avr8eind"/>
    <edc:InstructionSet edc:instructionsetid="avr8elpmx"/>
  </edc:InstructionSet>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="1" edc:cname="NMI" edc:desc="" ltx:memberofperipheral="CRCSCAN"/>
    <edc:Interrupt edc:irq="2" edc:cname="VLM" edc:desc="" ltx:memberofperipheral="BOD"/>
    <edc:Interrupt edc:irq="3" edc:cname="CFD" edc:desc="" ltx:memberofperipheral="CLKCTRL"/>
    <edc:Interrupt edc:irq="4" edc:cname="CNT" edc:desc="" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="5" edc:cname="PIT" edc:desc="" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="6" edc:cname="CCL" edc:desc="" ltx:memberofperipheral="CCL"/>
    <edc:Interrupt edc:irq="7" edc:cname="BUSEVENT" edc:desc="" ltx:memberofperipheral="USB0"/>
    <edc:Interrupt edc:irq="8" edc:cname="TRNCOMPL" edc:desc="" ltx:memberofperipheral="USB0"/>
    <edc:Interrupt edc:irq="9" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTA"/>
    <edc:Interrupt edc:irq="10" edc:cname="LUNF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="10" edc:cname="OVF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="11" edc:cname="HUNF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="12" edc:cname="CMP0" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="12" edc:cname="LCMP0" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="13" edc:cname="CMP1" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="13" edc:cname="LCMP1" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="14" edc:cname="CMP2" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="14" edc:cname="LCMP2" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="15" edc:cname="INT" edc:desc="" ltx:memberofperipheral="TCB0"/>
    <edc:Interrupt edc:irq="16" edc:cname="TWIS" edc:desc="" ltx:memberofperipheral="TWI0"/>
    <edc:Interrupt edc:irq="17" edc:cname="TWIM" edc:desc="" ltx:memberofperipheral="TWI0"/>
    <edc:Interrupt edc:irq="18" edc:cname="INT" edc:desc="" ltx:memberofperipheral="SPI0"/>
    <edc:Interrupt edc:irq="19" edc:cname="RXC" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="20" edc:cname="DRE" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="21" edc:cname="TXC" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="22" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTD"/>
    <edc:Interrupt edc:irq="23" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTC"/>
    <edc:Interrupt edc:irq="24" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTF"/>
    <edc:Interrupt edc:irq="25" edc:cname="NVMREADY" edc:desc="" ltx:memberofperipheral="NVMCTRL"/>
    <edc:Interrupt edc:irq="26" edc:cname="RXC" edc:desc="" ltx:memberofperipheral="USART1"/>
    <edc:Interrupt edc:irq="27" edc:cname="DRE" edc:desc="" ltx:memberofperipheral="USART1"/>
    <edc:Interrupt edc:irq="28" edc:cname="TXC" edc:desc="" ltx:memberofperipheral="USART1"/>
    <edc:Interrupt edc:irq="29" edc:cname="INT" edc:desc="" ltx:memberofperipheral="TCB1"/>
    <edc:Interrupt edc:irq="30" edc:cname="AC" edc:desc="" ltx:memberofperipheral="AC0"/>
    <edc:Interrupt edc:irq="31" edc:cname="ERROR" edc:desc="" ltx:memberofperipheral="ADC0"/>
    <edc:Interrupt edc:irq="32" edc:cname="RESRDY" edc:desc="" ltx:memberofperipheral="ADC0"/>
    <edc:Interrupt edc:irq="33" edc:cname="SAMPRDY" edc:desc="" ltx:memberofperipheral="ADC0"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="AC0" edc:desc=""/>
    <edc:Peripheral edc:cname="ADC0" edc:desc=""/>
    <edc:Peripheral edc:cname="BOD" edc:desc=""/>
    <edc:Peripheral edc:cname="BOOTROW" edc:desc=""/>
    <edc:Peripheral edc:cname="CCL" edc:desc=""/>
    <edc:Peripheral edc:cname="CLKCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="CPU" edc:desc=""/>
    <edc:Peripheral edc:cname="CPUINT" edc:desc=""/>
    <edc:Peripheral edc:cname="CRCSCAN" edc:desc=""/>
    <edc:Peripheral edc:cname="EVSYS" edc:desc=""/>
    <edc:Peripheral edc:cname="FUSE" edc:desc=""/>
    <edc:Peripheral edc:cname="GPR" edc:desc=""/>
    <edc:Peripheral edc:cname="LOCK" edc:desc=""/>
    <edc:Peripheral edc:cname="NVMCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTA" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTC" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTD" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTF" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTMUX" edc:desc=""/>
    <edc:Peripheral edc:cname="RSTCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="RTC" edc:desc=""/>
    <edc:Peripheral edc:cname="SIGROW" edc:desc=""/>
    <edc:Peripheral edc:cname="SLPCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="SPI0" edc:desc=""/>
    <edc:Peripheral edc:cname="SYSCFG" edc:desc=""/>
    <edc:Peripheral edc:cname="TCA0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCB0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCB1" edc:desc=""/>
    <edc:Peripheral edc:cname="TWI0" edc:desc=""/>
    <edc:Peripheral edc:cname="USART0" edc:desc=""/>
    <edc:Peripheral edc:cname="USART1" edc:desc=""/>
    <edc:Peripheral edc:cname="USB0" edc:desc=""/>
    <edc:Peripheral edc:cname="USERROW" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTA" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTC" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTD" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTF" edc:desc=""/>
    <edc:Peripheral edc:cname="VREF" edc:desc=""/>
    <edc:Peripheral edc:cname="WDT" edc:desc=""/>
  </edc:PeripheralList>
  <edc:ProgramSpace>
    <edc:CodeSector edc:regionid="PROGMEM" edc:beginaddr="0x0" edc:endaddr="0x4000" atdf:pagesize="0x200" edc:rw="rw"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:nzwidth="0x10" edc:cname="PC" edc:impl="0xFFFF" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:desc="Program Counter" edc:nmmrid="60"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R0" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="0"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R1" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="1"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R2" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="2"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R3" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="3"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R4" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="4"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R5" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="5"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R6" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="6"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R7" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="7"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R8" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="8"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R9" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="9"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R10" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="10"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R11" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="11"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R12" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="12"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R13" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="13"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R14" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="14"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R15" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="15"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R16" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="16"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R17" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="17"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R18" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="18"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R19" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="19"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R20" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="20"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R21" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="21"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R22" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="22"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R23" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="23"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R24" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="24"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R25" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="25"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R26" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="26"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R27" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="27"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R28" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="28"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R29" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="29"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R30" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="30"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R31" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="31"/>
      </edc:NMMRPlace>
      <edc:SFRDataSector edc:regionid="IO" edc:beginaddr="0x0" edc:endaddr="0x1010" edc:rw="rw">
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x0"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x2"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTA">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x8"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x9"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xA"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTC">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VPORTD" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xC"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTD" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTD" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTD" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTD">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x10"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTF" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x14"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTF" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x15"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTF" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x16"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTF" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x17">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTF">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x18"/>
        <edc:SFRDef ltx:memberofperipheral="GPR" edc:cname="GPR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1C"/>
        <edc:SFRDef ltx:memberofperipheral="GPR" edc:cname="GPR1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1D"/>
        <edc:SFRDef ltx:memberofperipheral="GPR" edc:cname="GPR2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1E"/>
        <edc:SFRDef ltx:memberofperipheral="GPR" edc:cname="GPR3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1F"/>
        <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x20"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="CCP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x34">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="CCP" edc:nzwidth="0x8" edc:desc="CCP signature">
                <edc:SFRFieldSemantic edc:cname="SPM" edc:desc="SPM Instruction Protection" edc:when="(field &amp; 0xFF) == 0x9D"/>
                <edc:SFRFieldSemantic edc:cname="IOREG" edc:desc="IO Register Protection" edc:when="(field &amp; 0xFF) == 0xD8"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x35"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="RAMPZ" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x3B"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x3C"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0111111111111111" edc:mclr="0111111111111111" edc:_addr="0x3D"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SREG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x3F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Carry Flag"/>
              <edc:SFRFieldDef edc:cname="Z" edc:nzwidth="0x1" edc:desc="Zero Flag"/>
              <edc:SFRFieldDef edc:cname="N" edc:nzwidth="0x1" edc:desc="Negative Flag"/>
              <edc:SFRFieldDef edc:cname="V" edc:nzwidth="0x1" edc:desc="Two's Complement Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="N Exclusive Or V Flag"/>
              <edc:SFRFieldDef edc:cname="H" edc:nzwidth="0x1" edc:desc="Half Carry Flag"/>
              <edc:SFRFieldDef edc:cname="T" edc:nzwidth="0x1" edc:desc="Transfer Bit"/>
              <edc:SFRFieldDef edc:cname="I" edc:nzwidth="0x1" edc:desc="Global Interrupt Enable Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RSTCTRL" edc:cname="RSTFR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x40">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTCTRL">
              <edc:SFRFieldDef edc:cname="PORF" edc:nzwidth="0x1" edc:desc="Power on Reset flag"/>
              <edc:SFRFieldDef edc:cname="BORF" edc:nzwidth="0x1" edc:desc="Brown out detector Reset flag"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:nzwidth="0x1" edc:desc="External Reset flag"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:nzwidth="0x1" edc:desc="Watch dog Reset flag"/>
              <edc:SFRFieldDef edc:cname="SWRF" edc:nzwidth="0x1" edc:desc="Software Reset flag"/>
              <edc:SFRFieldDef edc:cname="UPDIRF" edc:nzwidth="0x1" edc:desc="UPDI Reset flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RSTCTRL" edc:cname="SWRR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x41">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTCTRL">
              <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software reset enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x42"/>
        <edc:SFRDef ltx:memberofperipheral="SLPCTRL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x50">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLPCTRL">
              <edc:SFRFieldDef edc:cname="SEN" edc:nzwidth="0x1" edc:desc="Sleep enable"/>
              <edc:SFRFieldDef edc:cname="SMODE" edc:nzwidth="0x2" edc:desc="Sleep mode">
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="STDBY" edc:desc="Standby Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PDOWN" edc:desc="Power-down Mode" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SLPCTRL" edc:cname="VREGCTRL" edc:nzwidth="0x8" edc:access="---n-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x17" edc:_addr="0x51">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLPCTRL">
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x3" edc:desc="Performance Mode">
                <edc:SFRFieldSemantic edc:cname="AUTO" edc:desc="" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FULL" edc:desc="" edc:when="(field &amp; 0x7) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="HTLLEN" edc:nzwidth="0x1" edc:desc="High Temperature Low Leakage Enable">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x52"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKCTRLA" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:_addr="0x60">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock select">
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal high-frequency oscillator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="Internal 32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="32.768 kHz crystal oscillator" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External clock" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="CLKOUT" edc:nzwidth="0x1" edc:desc="System clock out"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKCTRLB" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x61">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="PEN" edc:nzwidth="0x1" edc:desc="Prescaler enable"/>
              <edc:SFRFieldDef edc:cname="PDIV" edc:nzwidth="0x4" edc:desc="Prescaler division">
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Divide by 32" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV6" edc:desc="Divide by 6" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV10" edc:desc="Divide by 10" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV12" edc:desc="Divide by 12" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV24" edc:desc="Divide by 24" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV48" edc:desc="Divide by 48" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKCTRLC" edc:nzwidth="0x8" edc:access="----nnwn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x62">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="CFDEN" edc:nzwidth="0x1" edc:desc="Clock Failure Detect Enable"/>
              <edc:SFRFieldDef edc:cname="CFDTST" edc:nzwidth="0x1" edc:desc="Clock Failure Detect Test"/>
              <edc:SFRFieldDef edc:cname="CFDSRC" edc:nzwidth="0x2" edc:desc="Clock Failure Detect Source">
                <edc:SFRFieldSemantic edc:cname="CLKMAIN" edc:desc="Main Clock" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="XOSCHF" edc:desc="XOSCHF" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKINTCTRL" edc:nzwidth="0x8" edc:access="n------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x81" edc:_addr="0x63">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="CFD" edc:nzwidth="0x1" edc:desc="Clock Failure Detect Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="INTTYPE" edc:nzwidth="0x1" edc:desc="Interrupt type">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Regular Interrupt" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NMI" edc:desc="NMI" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKINTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x64">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="CFD" edc:nzwidth="0x1" edc:desc="Clock Failure Detect Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKSTATUS" edc:nzwidth="0x8" edc:access="---rrrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x65">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="SOSC" edc:nzwidth="0x1" edc:desc="System Oscillator changing"/>
              <edc:SFRFieldDef edc:cname="OSCHFS" edc:nzwidth="0x1" edc:desc="High frequency oscillator status"/>
              <edc:SFRFieldDef edc:cname="OSC32KS" edc:nzwidth="0x1" edc:desc="32KHz oscillator status"/>
              <edc:SFRFieldDef edc:cname="XOSC32KS" edc:nzwidth="0x1" edc:desc="32.768 kHz Crystal Oscillator status"/>
              <edc:SFRFieldDef edc:cname="EXTS" edc:nzwidth="0x1" edc:desc="External Clock status"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKTIMEBASE" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x66">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="TIMEBASE" edc:nzwidth="0x5" edc:desc="Timebase"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x67"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSCHFCTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00001100" edc:mclr="00001100" edc:_addr="0x68">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="AUTOTUNE" edc:nzwidth="0x2" edc:desc="Autotune">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Automatic tuning disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="32K" edc:desc="Automatic tuning against XOSC32K enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SOF" edc:desc="Automatic tuning against USB SOF enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FRQSEL" edc:nzwidth="0x4" edc:desc="Frequency select">
                <edc:SFRFieldSemantic edc:cname="1M" edc:desc="1 MHz system clock" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2M" edc:desc="2 MHz system clock" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="3M" edc:desc="3 MHz system clock" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="4M" edc:desc="4 MHz system clock (default)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="8M" edc:desc="8 MHz system clock" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="12M" edc:desc="12 MHz system clock" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="16M" edc:desc="16 MHz system clock" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="20M" edc:desc="20 MHz system clock" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="24M" edc:desc="24 MHz system clock" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="28M" edc:desc="28 MHz system clock" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="32M" edc:desc="32 MHz system clock" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ALGSEL" edc:nzwidth="0x1" edc:desc="Algorithm Selection">
                <edc:SFRFieldSemantic edc:cname="BIN" edc:desc="Binary Search" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INCR" edc:desc="Incremental Search" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSCHFTUNE" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:impl="0x7F" edc:_addr="0x69">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="TUNE" edc:nzwidth="0x7" edc:desc="Tune"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSCHFSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:impl="0x3" edc:_addr="0x6A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="ATSYNC" edc:nzwidth="0x1" edc:desc="Autotune in Lock"/>
              <edc:SFRFieldDef edc:cname="ATLOCK" edc:nzwidth="0x1" edc:desc="Autotune Synchronized"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xD" edc:_addr="0x6B"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSC32KCTRLA" edc:nzwidth="0x8" edc:access="n-------" edc:por="00000000" edc:mclr="00000000" edc:impl="0x80" edc:_addr="0x78">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:AdjustPoint edc:offset="0x7"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x79"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="XOSC32KCTRLA" edc:nzwidth="0x8" edc:access="n-nn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xB7" edc:_addr="0x7C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="LPMODE" edc:nzwidth="0x1" edc:desc="Low power mode"/>
              <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x1" edc:desc="Select">
                <edc:SFRFieldSemantic edc:cname="XTAL" edc:desc="External crystal connected to the XTAL32K1 and XTAL32K2 pins" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External clock on the XTAL32K1 pin" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CSUT" edc:nzwidth="0x2" edc:desc="Crystal startup time">
                <edc:SFRFieldSemantic edc:cname="1K" edc:desc="1k cycles" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="16K" edc:desc="16k cycles" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="32K" edc:desc="32k cycles" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="64K" edc:desc="64k cycles" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x7D"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="XOSCHFCTRLA" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:_addr="0x80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="SELHF" edc:nzwidth="0x1" edc:desc="External Source Select">
                <edc:SFRFieldSemantic edc:cname="XTAL" edc:desc="External Crystal" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External clock on XTALHF1 pin" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FRQRANGE" edc:nzwidth="0x2" edc:desc="Frequency Range">
                <edc:SFRFieldSemantic edc:cname="8M" edc:desc="Max 8 MHz XTAL Frequency" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="16M" edc:desc="Max 16 MHz XTAL Frequency" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="24M" edc:desc="Max 24 MHz XTAL Frequency" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32M" edc:desc="Max 32 MHz XTAL Frequency" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CSUTHF" edc:nzwidth="0x2" edc:desc="Start-up Time Select">
                <edc:SFRFieldSemantic edc:cname="256" edc:desc="256 XOSCHF cycles" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="1K" edc:desc="1K XOSCHF cycles" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="4K" edc:desc="4K XOSCHF cycles" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTBY" edc:nzwidth="0x1" edc:desc="Run Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x81"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="USBPLLSTATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x85">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="PLLS" edc:nzwidth="0x1" edc:desc="PLL Stable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1A" edc:_addr="0x86"/>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="---rrrnn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x1F" edc:_addr="0xA0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="SLEEP" edc:nzwidth="0x2" edc:desc="Operation in sleep mode">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x2" edc:desc="Operation in active mode">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ENWAKE" edc:desc="Enabled with wake-up halted until BOD is ready" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SAMPFREQ" edc:nzwidth="0x1" edc:desc="Sample frequency">
                <edc:SFRFieldSemantic edc:cname="128HZ" edc:desc="128Hz sampling frequency" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="32HZ" edc:desc="32Hz sampling frequency" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xA1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="LVL" edc:nzwidth="0x3" edc:desc="Bod level">
                <edc:SFRFieldSemantic edc:cname="BODLEVEL0" edc:desc="1.9 V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL1" edc:desc="2.45 V" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL2" edc:desc="2.7 V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL3" edc:desc="2.85 V" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0xA2"/>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="VLMCTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xA8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMLVL" edc:nzwidth="0x2" edc:desc="voltage level monitor level">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="VLM Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="5ABOVE" edc:desc="VLM threshold 5% above BOD level" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="15ABOVE" edc:desc="VLM threshold 15% above BOD level" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="25ABOVE" edc:desc="VLM threshold 25% above BOD level" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xA9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMIE" edc:nzwidth="0x1" edc:desc="voltage level monitor interrrupt enable"/>
              <edc:SFRFieldDef edc:cname="VLMCFG" edc:nzwidth="0x2" edc:desc="Configuration">
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="VDD falls below VLM threshold" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="VDD rises above VLM threshold" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="VDD crosses VLM threshold" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xAA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMIF" edc:nzwidth="0x1" edc:desc="Voltage level monitor interrupt flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xAB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMS" edc:nzwidth="0x1" edc:desc="Voltage level monitor status">
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="The voltage is above the VLM threshold level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="The voltage is below the VLM threshold level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xAC"/>
        <edc:SFRDef ltx:memberofperipheral="VREF" edc:cname="ACREF" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:_addr="0xB0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VREF">
              <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x3" edc:desc="Reference select">
                <edc:SFRFieldSemantic edc:cname="1V024" edc:desc="Internal 1.024V reference" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2V048" edc:desc="Internal 2.048V reference" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="4V096" edc:desc="Internal 4.096V reference" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="2V500" edc:desc="Internal 2.500V reference" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VDD" edc:desc="VDD as reference" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External reference on VREFA pin" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="ALWAYSON" edc:nzwidth="0x1" edc:desc="Always on"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4F" edc:_addr="0xB1"/>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x100">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Period">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WINDOW" edc:nzwidth="0x4" edc:desc="Window">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="n------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x81" edc:_addr="0x101">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="SYNCBUSY" edc:nzwidth="0x1" edc:desc="Syncronization busy"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="LOCK" edc:nzwidth="0x1" edc:desc="Lock enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x102"/>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nn----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x61" edc:_addr="0x110">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0RR" edc:nzwidth="0x1" edc:desc="Round-robin Scheduling Enable"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="CVT" edc:nzwidth="0x1" edc:desc="Compact Vector Table"/>
              <edc:SFRFieldDef edc:cname="IVSEL" edc:nzwidth="0x1" edc:desc="Interrupt Vector Select"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="r-----rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x111">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0EX" edc:nzwidth="0x1" edc:desc="Level 0 Interrupt Executing"/>
              <edc:SFRFieldDef edc:cname="LVL1EX" edc:nzwidth="0x1" edc:desc="Level 1 Interrupt Executing"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="NMIEX" edc:nzwidth="0x1" edc:desc="Non-maskable Interrupt Executing"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="LVL0PRI" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x112">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0PRI" edc:nzwidth="0x8" edc:desc="Interrupt Level Priority"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="LVL1VEC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x113">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL1VEC" edc:nzwidth="0x8" edc:desc="Interrupt Vector with High Priority"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x114"/>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x120">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable CRC scan"/>
              <edc:SFRFieldDef edc:cname="NMIEN" edc:nzwidth="0x1" edc:desc="Enable NMI Trigger"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="RESET" edc:nzwidth="0x1" edc:desc="Reset CRC scan"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x121">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="CRC Source">
                <edc:SFRFieldSemantic edc:cname="FLASH" edc:desc="CRC on entire flash" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="APPLICATION" edc:desc="CRC on boot and appl section of flash" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BOOT" edc:desc="CRC on boot section of flash" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000010" edc:mclr="00000010" edc:impl="0x3" edc:_addr="0x122">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="CRC Busy"/>
              <edc:SFRFieldDef edc:cname="OK" edc:nzwidth="0x1" edc:desc="CRC Ok"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1D" edc:_addr="0x123"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x140">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="RTCEN" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CORREN" edc:nzwidth="0x1" edc:desc="Correction enable"/>
              <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaling Factor">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="RTC Clock / 1" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="RTC Clock / 2" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="RTC Clock / 4" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="RTC Clock / 8" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="RTC Clock / 16" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="RTC Clock / 32" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="RTC Clock / 64" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="RTC Clock / 128" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="RTC Clock / 256" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="RTC Clock / 512" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="RTC Clock / 1024" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV2048" edc:desc="RTC Clock / 2048" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV4096" edc:desc="RTC Clock / 4096" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DIV8192" edc:desc="RTC Clock / 8192" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="DIV16384" edc:desc="RTC Clock / 16384" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="DIV32768" edc:desc="RTC Clock / 32768" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run In Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="----rrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x141">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CTRLABUSY" edc:nzwidth="0x1" edc:desc="CTRLA Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="CNTBUSY" edc:nzwidth="0x1" edc:desc="Count Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="PERBUSY" edc:nzwidth="0x1" edc:desc="Period Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="CMPBUSY" edc:nzwidth="0x1" edc:desc="Comparator Synchronization Busy Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x142">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt enable"/>
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Compare Match Interrupt enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x143">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Compare Match Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x144"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x145">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run in debug"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CALIB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x146">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x7" edc:desc="Error Correction Value"/>
              <edc:SFRFieldDef edc:cname="SIGN" edc:nzwidth="0x1" edc:desc="Error Correction Sign Bit"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CLKSEL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x147">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="Internal 32.768 kHz Oscillator Divided by 32" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz Crystal Oscillator" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="Internal 32.768 kHz Oscillator" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External Clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x148"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="1111111111111111" edc:mclr="1111111111111111" edc:_addr="0x14A"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x14C"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x14E"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITCTRLA" edc:nzwidth="0x8" edc:access="-nnnn--n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x79" edc:_addr="0x150">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PITEN" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Period">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CYC4" edc:desc="RTC Clock Cycles 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="RTC Clock Cycles 8" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="RTC Clock Cycles 16" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="RTC Clock Cycles 32" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="RTC Clock Cycles 64" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="RTC Clock Cycles 128" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="RTC Clock Cycles 256" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="RTC Clock Cycles 512" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="RTC Clock Cycles 1024" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="RTC Clock Cycles 2048" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="RTC Clock Cycles 4096" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="RTC Clock Cycles 8192" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="CYC16384" edc:desc="RTC Clock Cycles 16384" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="CYC32768" edc:desc="RTC Clock Cycles 32768" edc:when="(field &amp; 0xF) == 0x0E"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITSTATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x151">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CTRLBUSY" edc:nzwidth="0x1" edc:desc="CTRLA Synchronization Busy Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITINTCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x152">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PI" edc:nzwidth="0x1" edc:desc="Periodic Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITINTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x153">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PI" edc:nzwidth="0x1" edc:desc="Periodic Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x154"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITDBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x155">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run in debug"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITEVGENCTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x156">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="EVGEN0SEL" edc:nzwidth="0x4" edc:desc="Event Generation 0 Select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No Event Generated" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC divided by 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC divided by 8" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC divided by 16" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC divided by 32" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC divided by 64" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC divided by 128" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC divided by 256" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC divided by 512" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC divided by 1024" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV2048" edc:desc="CLK_RTC divided by 2048" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV4096" edc:desc="CLK_RTC divided by 4096" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV8192" edc:desc="CLK_RTC divided by 8192" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DIV16384" edc:desc="CLK_RTC divided by 16384" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="DIV32768" edc:desc="CLK_RTC divided by 32768" edc:when="(field &amp; 0xF) == 0x0E"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="EVGEN1SEL" edc:nzwidth="0x4" edc:desc="Event Generation 1 Select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No Event Generated" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC divided by 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC divided by 8" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC divided by 16" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC divided by 32" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC divided by 64" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC divided by 128" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC divided by 256" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC divided by 512" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC divided by 1024" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV2048" edc:desc="CLK_RTC divided by 2048" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV4096" edc:desc="CLK_RTC divided by 4096" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV8192" edc:desc="CLK_RTC divided by 8192" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DIV16384" edc:desc="CLK_RTC divided by 16384" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="DIV32768" edc:desc="CLK_RTC divided by 32768" edc:when="(field &amp; 0xF) == 0x0E"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x69" edc:_addr="0x157"/>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n-----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x41" edc:_addr="0x1C0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL0" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1C1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x4" edc:desc="Sequential Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic disabled" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D FlipFlop" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK FlipFlop" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D Latch" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS Latch" edc:when="(field &amp; 0xF) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL1" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1C2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x4" edc:desc="Sequential Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic disabled" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D FlipFlop" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK FlipFlop" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D Latch" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS Latch" edc:when="(field &amp; 0xF) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x1C3"/>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="INTCTRL0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INTMODE0" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT0">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE1" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT1">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE2" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT2">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE3" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1C6"/>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1C7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x4" edc:desc="Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="Selection by INSEL2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal High-Frequency Oscillator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz oscillator divided by 32" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN0" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN1" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1CA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="Selection by INSEL2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal High-Frequency Oscillator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz oscillator divided by 32" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN0" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN1" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1CE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT2CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="Selection by INSEL2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal High-Frequency Oscillator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz oscillator divided by 32" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT2CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN0" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN1" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT2CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1D2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT3CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="Peripheral Clock" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="Selection by INSEL2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCHF" edc:desc="Internal High-Frequency Oscillator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768 kHz oscillator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="32.768 kHz oscillator divided by 32" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT3CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN0" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN1" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT3CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1D6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x28" edc:_addr="0x1D8"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SWEVENTA" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x200">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="SWEVENTA" edc:nzwidth="0x8" edc:desc="Software event on channel select">
                <edc:SFRFieldSemantic edc:cname="CH0" edc:desc="Software event on channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CH1" edc:desc="Software event on channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CH2" edc:desc="Software event on channel 2" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CH3" edc:desc="Software event on channel 3" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CH4" edc:desc="Software event on channel 4" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CH5" edc:desc="Software event on channel 5" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="CH6" edc:desc="Software event on channel 6" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="CH7" edc:desc="Software event on channel 7" edc:when="(field &amp; 0xFF) == 0x80"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xF" edc:_addr="0x201"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x210">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x8" edc:desc="Channel generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH Character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter Overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter Compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN0" edc:desc="Real Time Counter Event Output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN1" edc:desc="Real Time Counter Event Output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 Out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMPRDY" edc:desc="ADC0 Sample Ready" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC0 Window Comparator" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN0" edc:desc="Port A Event 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN1" edc:desc="Port A Event 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN0" edc:desc="Port C Event 0" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN1" edc:desc="Port C Event 1" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN0" edc:desc="Port D Event 0" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN1" edc:desc="Port D Event 1" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN0" edc:desc="Port F Event 0" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN1" edc:desc="Port F Event 1" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 Overflow / Low Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 High Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 Compare 0 / Low Byte Compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 Compare 1 / Low Byte Compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 Compare 2 / Low Byte Compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 Capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 Overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 Capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 Overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SETUP" edc:desc="USB0 Setup Received" edc:when="(field &amp; 0xFF) == 0xC0"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SOF" edc:desc="USB0 SOF Received" edc:when="(field &amp; 0xFF) == 0xC1"/>
                <edc:SFRFieldSemantic edc:cname="USB0_CRC" edc:desc="USB0 CRC Error" edc:when="(field &amp; 0xFF) == 0xC2"/>
                <edc:SFRFieldSemantic edc:cname="USB0_UNFOVF" edc:desc="USB0 Underflow / Overflow" edc:when="(field &amp; 0xFF) == 0xC3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_RX" edc:desc="USB0 Data Byte Received" edc:when="(field &amp; 0xFF) == 0xC4"/>
                <edc:SFRFieldSemantic edc:cname="USB0_TX" edc:desc="USB0 Data Byte Transmitted" edc:when="(field &amp; 0xFF) == 0xC5"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x211">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x8" edc:desc="Channel generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH Character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter Overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter Compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN0" edc:desc="Real Time Counter Event Output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN1" edc:desc="Real Time Counter Event Output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 Out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMPRDY" edc:desc="ADC0 Sample Ready" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC0 Window Comparator" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN0" edc:desc="Port A Event 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN1" edc:desc="Port A Event 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN0" edc:desc="Port C Event 0" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN1" edc:desc="Port C Event 1" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN0" edc:desc="Port D Event 0" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN1" edc:desc="Port D Event 1" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN0" edc:desc="Port F Event 0" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN1" edc:desc="Port F Event 1" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 Overflow / Low Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 High Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 Compare 0 / Low Byte Compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 Compare 1 / Low Byte Compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 Compare 2 / Low Byte Compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 Capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 Overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 Capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 Overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SETUP" edc:desc="USB0 Setup Received" edc:when="(field &amp; 0xFF) == 0xC0"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SOF" edc:desc="USB0 SOF Received" edc:when="(field &amp; 0xFF) == 0xC1"/>
                <edc:SFRFieldSemantic edc:cname="USB0_CRC" edc:desc="USB0 CRC Error" edc:when="(field &amp; 0xFF) == 0xC2"/>
                <edc:SFRFieldSemantic edc:cname="USB0_UNFOVF" edc:desc="USB0 Underflow / Overflow" edc:when="(field &amp; 0xFF) == 0xC3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_RX" edc:desc="USB0 Data Byte Received" edc:when="(field &amp; 0xFF) == 0xC4"/>
                <edc:SFRFieldSemantic edc:cname="USB0_TX" edc:desc="USB0 Data Byte Transmitted" edc:when="(field &amp; 0xFF) == 0xC5"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x212">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x8" edc:desc="Channel generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH Character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter Overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter Compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN0" edc:desc="Real Time Counter Event Output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN1" edc:desc="Real Time Counter Event Output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 Out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMPRDY" edc:desc="ADC0 Sample Ready" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC0 Window Comparator" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN0" edc:desc="Port A Event 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN1" edc:desc="Port A Event 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN0" edc:desc="Port C Event 0" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN1" edc:desc="Port C Event 1" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN0" edc:desc="Port D Event 0" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN1" edc:desc="Port D Event 1" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN0" edc:desc="Port F Event 0" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN1" edc:desc="Port F Event 1" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 Overflow / Low Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 High Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 Compare 0 / Low Byte Compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 Compare 1 / Low Byte Compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 Compare 2 / Low Byte Compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 Capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 Overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 Capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 Overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SETUP" edc:desc="USB0 Setup Received" edc:when="(field &amp; 0xFF) == 0xC0"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SOF" edc:desc="USB0 SOF Received" edc:when="(field &amp; 0xFF) == 0xC1"/>
                <edc:SFRFieldSemantic edc:cname="USB0_CRC" edc:desc="USB0 CRC Error" edc:when="(field &amp; 0xFF) == 0xC2"/>
                <edc:SFRFieldSemantic edc:cname="USB0_UNFOVF" edc:desc="USB0 Underflow / Overflow" edc:when="(field &amp; 0xFF) == 0xC3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_RX" edc:desc="USB0 Data Byte Received" edc:when="(field &amp; 0xFF) == 0xC4"/>
                <edc:SFRFieldSemantic edc:cname="USB0_TX" edc:desc="USB0 Data Byte Transmitted" edc:when="(field &amp; 0xFF) == 0xC5"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x213">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x8" edc:desc="Channel generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH Character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter Overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter Compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN0" edc:desc="Real Time Counter Event Output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN1" edc:desc="Real Time Counter Event Output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 Out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMPRDY" edc:desc="ADC0 Sample Ready" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC0 Window Comparator" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN0" edc:desc="Port A Event 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN1" edc:desc="Port A Event 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN0" edc:desc="Port C Event 0" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN1" edc:desc="Port C Event 1" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN0" edc:desc="Port D Event 0" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN1" edc:desc="Port D Event 1" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN0" edc:desc="Port F Event 0" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN1" edc:desc="Port F Event 1" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 Overflow / Low Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 High Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 Compare 0 / Low Byte Compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 Compare 1 / Low Byte Compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 Compare 2 / Low Byte Compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 Capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 Overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 Capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 Overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SETUP" edc:desc="USB0 Setup Received" edc:when="(field &amp; 0xFF) == 0xC0"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SOF" edc:desc="USB0 SOF Received" edc:when="(field &amp; 0xFF) == 0xC1"/>
                <edc:SFRFieldSemantic edc:cname="USB0_CRC" edc:desc="USB0 CRC Error" edc:when="(field &amp; 0xFF) == 0xC2"/>
                <edc:SFRFieldSemantic edc:cname="USB0_UNFOVF" edc:desc="USB0 Underflow / Overflow" edc:when="(field &amp; 0xFF) == 0xC3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_RX" edc:desc="USB0 Data Byte Received" edc:when="(field &amp; 0xFF) == 0xC4"/>
                <edc:SFRFieldSemantic edc:cname="USB0_TX" edc:desc="USB0 Data Byte Transmitted" edc:when="(field &amp; 0xFF) == 0xC5"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x214">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x8" edc:desc="Channel generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH Character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter Overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter Compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN0" edc:desc="Real Time Counter Event Output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN1" edc:desc="Real Time Counter Event Output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 Out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMPRDY" edc:desc="ADC0 Sample Ready" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC0 Window Comparator" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN0" edc:desc="Port A Event 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN1" edc:desc="Port A Event 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN0" edc:desc="Port C Event 0" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN1" edc:desc="Port C Event 1" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN0" edc:desc="Port D Event 0" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN1" edc:desc="Port D Event 1" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN0" edc:desc="Port F Event 0" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN1" edc:desc="Port F Event 1" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 Overflow / Low Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 High Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 Compare 0 / Low Byte Compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 Compare 1 / Low Byte Compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 Compare 2 / Low Byte Compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 Capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 Overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 Capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 Overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SETUP" edc:desc="USB0 Setup Received" edc:when="(field &amp; 0xFF) == 0xC0"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SOF" edc:desc="USB0 SOF Received" edc:when="(field &amp; 0xFF) == 0xC1"/>
                <edc:SFRFieldSemantic edc:cname="USB0_CRC" edc:desc="USB0 CRC Error" edc:when="(field &amp; 0xFF) == 0xC2"/>
                <edc:SFRFieldSemantic edc:cname="USB0_UNFOVF" edc:desc="USB0 Underflow / Overflow" edc:when="(field &amp; 0xFF) == 0xC3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_RX" edc:desc="USB0 Data Byte Received" edc:when="(field &amp; 0xFF) == 0xC4"/>
                <edc:SFRFieldSemantic edc:cname="USB0_TX" edc:desc="USB0 Data Byte Transmitted" edc:when="(field &amp; 0xFF) == 0xC5"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x215">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x8" edc:desc="Channel generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI_SYNCH" edc:desc="UPDI SYNCH Character" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter Overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter Compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN0" edc:desc="Real Time Counter Event Output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_EVGEN1" edc:desc="Real Time Counter Event Output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 Out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC0 Result Ready" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMPRDY" edc:desc="ADC0 Sample Ready" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC0 Window Comparator" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN0" edc:desc="Port A Event 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_EVGEN1" edc:desc="Port A Event 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN0" edc:desc="Port C Event 0" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_EVGEN1" edc:desc="Port C Event 1" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN0" edc:desc="Port D Event 0" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTD_EVGEN1" edc:desc="Port D Event 1" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN0" edc:desc="Port F Event 0" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTF_EVGEN1" edc:desc="Port F Event 1" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 SCK" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 Overflow / Low Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 High Byte Timer Underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 Compare 0 / Low Byte Compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 Compare 1 / Low Byte Compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 Compare 2 / Low Byte Compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 Capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 Overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 Capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 Overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SETUP" edc:desc="USB0 Setup Received" edc:when="(field &amp; 0xFF) == 0xC0"/>
                <edc:SFRFieldSemantic edc:cname="USB0_SOF" edc:desc="USB0 SOF Received" edc:when="(field &amp; 0xFF) == 0xC1"/>
                <edc:SFRFieldSemantic edc:cname="USB0_CRC" edc:desc="USB0 CRC Error" edc:when="(field &amp; 0xFF) == 0xC2"/>
                <edc:SFRFieldSemantic edc:cname="USB0_UNFOVF" edc:desc="USB0 Underflow / Overflow" edc:when="(field &amp; 0xFF) == 0xC3"/>
                <edc:SFRFieldSemantic edc:cname="USB0_RX" edc:desc="USB0 Data Byte Received" edc:when="(field &amp; 0xFF) == 0xC4"/>
                <edc:SFRFieldSemantic edc:cname="USB0_TX" edc:desc="USB0 Data Byte Transmitted" edc:when="(field &amp; 0xFF) == 0xC5"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xA" edc:_addr="0x216"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT0A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x220">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT0B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x221">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT1A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x222">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT1B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x223">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT2A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x224">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT2B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x225">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT3A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x226">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT3B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x227">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERADC0START" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x228">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x229">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERUSART0IRDA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERUSART1IRDA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCA0CNTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCA0CNTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x22F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB0CAPT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x230">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB0COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x231">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB1CAPT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x232">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB1COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x233">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="User channel select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1CC" edc:_addr="0x234"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x400"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x401"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x402"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x403"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x404"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x405"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x406"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x407"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x408"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x409">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PORTACTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINCONFIG" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x40B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40C"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40D"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40E"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40F"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x410">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x411">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x412">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x413">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x414">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x415">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x416">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x417">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="EVGENCTRLA" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x418">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="EVGEN0SEL" edc:nzwidth="0x3" edc:desc="Event Generator 0 Select">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Pin 0 used as event generator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Pin 1 used as event generator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Pin 2 used as event generator" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Pin 3 used as event generator" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PIN4" edc:desc="Pin 4 used as event generator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="PIN5" edc:desc="Pin 5 used as event generator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="PIN6" edc:desc="Pin 6 used as event generator" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PIN7" edc:desc="Pin 7 used as event generator" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EVGEN1SEL" edc:nzwidth="0x3" edc:desc="Event Generator 1 Select">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Pin 0 used as event generator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Pin 1 used as event generator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Pin 2 used as event generator" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Pin 3 used as event generator" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PIN4" edc:desc="Pin 4 used as event generator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="PIN5" edc:desc="Pin 5 used as event generator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="PIN6" edc:desc="Pin 6 used as event generator" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PIN7" edc:desc="Pin 7 used as event generator" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x27" edc:_addr="0x419"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x440"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x441"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x442"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x443"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x444"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x445"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x446"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x447"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x448"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x449">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PORTCCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x44A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PINCONFIG" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x44B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x44C"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x44D"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x44E"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x44F"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x450">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x451">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x452">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x453">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x454">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x455">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x456">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x457">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="EVGENCTRLA" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x458">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="EVGEN0SEL" edc:nzwidth="0x3" edc:desc="Event Generator 0 Select">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Pin 0 used as event generator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Pin 1 used as event generator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Pin 2 used as event generator" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Pin 3 used as event generator" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PIN4" edc:desc="Pin 4 used as event generator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="PIN5" edc:desc="Pin 5 used as event generator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="PIN6" edc:desc="Pin 6 used as event generator" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PIN7" edc:desc="Pin 7 used as event generator" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EVGEN1SEL" edc:nzwidth="0x3" edc:desc="Event Generator 1 Select">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Pin 0 used as event generator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Pin 1 used as event generator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Pin 2 used as event generator" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Pin 3 used as event generator" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PIN4" edc:desc="Pin 4 used as event generator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="PIN5" edc:desc="Pin 5 used as event generator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="PIN6" edc:desc="Pin 6 used as event generator" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PIN7" edc:desc="Pin 7 used as event generator" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x7" edc:_addr="0x459"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x460"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x461"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x462"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x463"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x464"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x465"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x466"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x467"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x468"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x469">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PORTDCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x46A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PINCONFIG" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x46B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x46C"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x46D"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x46E"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x46F"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x470">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x471">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x472">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x473">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x474">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x475">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x476">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x477">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="EVGENCTRLA" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x478">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTD">
              <edc:SFRFieldDef edc:cname="EVGEN0SEL" edc:nzwidth="0x3" edc:desc="Event Generator 0 Select">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Pin 0 used as event generator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Pin 1 used as event generator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Pin 2 used as event generator" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Pin 3 used as event generator" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PIN4" edc:desc="Pin 4 used as event generator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="PIN5" edc:desc="Pin 5 used as event generator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="PIN6" edc:desc="Pin 6 used as event generator" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PIN7" edc:desc="Pin 7 used as event generator" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EVGEN1SEL" edc:nzwidth="0x3" edc:desc="Event Generator 1 Select">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Pin 0 used as event generator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Pin 1 used as event generator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Pin 2 used as event generator" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Pin 3 used as event generator" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PIN4" edc:desc="Pin 4 used as event generator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="PIN5" edc:desc="Pin 5 used as event generator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="PIN6" edc:desc="Pin 6 used as event generator" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PIN7" edc:desc="Pin 7 used as event generator" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x27" edc:_addr="0x479"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A0"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A1"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A2"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A3"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A4"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A5"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A6"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A7"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A8"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4A9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PORTFCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4AA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PINCONFIG" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x4AB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PINCTRLUPD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4AC"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PINCTRLSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4AD"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PINCTRLCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4AE"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4AF"/>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x4B0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x4B1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x4B2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x4B3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x4B4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x4B5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x4B6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCF" edc:_addr="0x4B7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INLVL" edc:nzwidth="0x1" edc:desc="Input Level Select">
                <edc:SFRFieldSemantic edc:cname="ST" edc:desc="Schmitt-Trigger input level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TTL" edc:desc="TTL Input level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTF" edc:cname="EVGENCTRLA" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x4B8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTF">
              <edc:SFRFieldDef edc:cname="EVGEN0SEL" edc:nzwidth="0x3" edc:desc="Event Generator 0 Select">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Pin 0 used as event generator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Pin 1 used as event generator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Pin 2 used as event generator" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Pin 3 used as event generator" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PIN4" edc:desc="Pin 4 used as event generator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="PIN5" edc:desc="Pin 5 used as event generator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="PIN6" edc:desc="Pin 6 used as event generator" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PIN7" edc:desc="Pin 7 used as event generator" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EVGEN1SEL" edc:nzwidth="0x3" edc:desc="Event Generator 1 Select">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Pin 0 used as event generator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Pin 1 used as event generator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Pin 2 used as event generator" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Pin 3 used as event generator" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PIN4" edc:desc="Pin 4 used as event generator" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="PIN5" edc:desc="Pin 5 used as event generator" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="PIN6" edc:desc="Pin 6 used as event generator" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PIN7" edc:desc="Pin 7 used as event generator" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x127" edc:_addr="0x4B9"/>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="EVSYSROUTEA" edc:nzwidth="0x8" edc:access="--n-n--n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x29" edc:_addr="0x5E0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="EVOUTA" edc:nzwidth="0x1" edc:desc="Event Output A">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUTA: PA2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="EVOUTA: PA7" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="EVOUTD" edc:nzwidth="0x1" edc:desc="Event Output D">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUTD: PD2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="EVOUTD: PD7" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EVOUTF" edc:nzwidth="0x1" edc:desc="Event Output F">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUTF: PF2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="EVOUTF: PF7" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="CCLROUTEA" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x5E1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="LUT0" edc:nzwidth="0x1" edc:desc="CCL Look-Up Table 0 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="In: PA0, PA1, PA2, Out: PA3" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="In: PA0, PA1, PA2, Out: PA6" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT1" edc:nzwidth="0x1" edc:desc="CCL Look-Up Table 1 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="In: -, -, -, Out: PC3" edc:when="(field &amp; 0x1) == 0x00"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT2" edc:nzwidth="0x1" edc:desc="CCL Look-Up Table 2 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="In: PD0, PD1, PD2, Out: PD3" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="In: PD0, PD1, PD2, Out: PD6" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT3" edc:nzwidth="0x1" edc:desc="CCL Look-Up Table 3 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="In: PF0, PF1, PF2, Out: PF3" edc:when="(field &amp; 0x1) == 0x00"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="USARTROUTEA" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x5E2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="USART0" edc:nzwidth="0x3" edc:desc="USART0 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="TxD: PA0, RxD: PA1, XCK: PA2, XDIR: PA3" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="TxD: PA4, RxD: PA5, XCK: PA6, XDIR: PA7" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ALT2" edc:desc="TxD: PA2, RxD: PA3, XCK: -, XDIR: -" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ALT3" edc:desc="TxD: PD4, RxD: PD5, XCK: PD6, XDIR: PD7" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="USART1" edc:nzwidth="0x2" edc:desc="USART1 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT2" edc:desc="TxD: PD6, RxD: PD7, XCK: -, XDIR: -" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x5E3"/>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="SPIROUTEA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x5E5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="SPI0" edc:nzwidth="0x3" edc:desc="SPI0 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="MOSI: PA4, MISO: PA5, SCK: PA6, SS: PA7" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT4" edc:desc="MOSI: PD4, MISO: PD5, SCK: PD6, SS: PD7" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins, SS set to 1" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="TWIROUTEA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x5E6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TWI0" edc:nzwidth="0x2" edc:desc="TWI0 Signals">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="SDA: PA2, SCL: PA3" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT3" edc:desc="SDA: PA0, SCL: PA1" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="TCAROUTEA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x5E7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TCA0" edc:nzwidth="0x3" edc:desc="TCA0 Signals">
                <edc:SFRFieldSemantic edc:cname="PORTA" edc:desc="WOn: PA0, PA1, PA2, PA3, PA4, PA5" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PORTC" edc:desc="WOn: -, -, -, PC3, -, -" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PORTD" edc:desc="WOn: PD0, PD1, PD2, PD3, PD4, PD5" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PORTF" edc:desc="WOn: PF0, PF1, PF2, PF3, PF4, PF5" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="TCBROUTEA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x5E8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TCB0" edc:nzwidth="0x1" edc:desc="TCB0 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO: PA2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO: PF4" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCB1" edc:nzwidth="0x1" edc:desc="TCB1 Output">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO: PA3" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO: PF5" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x17" edc:_addr="0x5E9"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n-n----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xA1" edc:_addr="0x600">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="ADC Enable"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="LOWLAT" edc:nzwidth="0x1" edc:desc="Conversion mode"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTBY" edc:nzwidth="0x1" edc:desc="Run standby mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x601">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="Clock Pre-scaler">
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER divided by 2" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER divided by 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV6" edc:desc="CLK_PER divided by 6" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER divided by 8" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV10" edc:desc="CLK_PER divided by 10" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV12" edc:desc="CLK_PER divided by 12" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV14" edc:desc="CLK_PER divided by 14" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER divided by 16" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DIV20" edc:desc="CLK_PER divided by 20" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV24" edc:desc="CLK_PER divided by 24" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV28" edc:desc="CLK_PER divided by 28" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_PER divided by 32" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV40" edc:desc="CLK_PER divided by 40" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DIV48" edc:desc="CLK_PER divided by 48" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="DIV56" edc:desc="CLK_PER divided by 56" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER divided by 64" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x602">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x3" edc:desc="Reference Selection">
                <edc:SFRFieldSemantic edc:cname="VDD" edc:desc="VDD" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="VREFA" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="1V024" edc:desc="1.024V" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="2V048" edc:desc="2.048V" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="4V096" edc:desc="4.096V" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="2V500" edc:desc="2.5V" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x603">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="WINCM" edc:nzwidth="0x3" edc:desc="Window Comparator Mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Window Comparison" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Below Window" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Above Window" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Inside Window" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Outside Window" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WINSRC" edc:nzwidth="0x1" edc:desc="Window Mode Source"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLE" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x604">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPDUR" edc:nzwidth="0x8" edc:desc="Sample Duration"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLF" edc:nzwidth="0x8" edc:access="--nn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x37" edc:_addr="0x605">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPNUM" edc:nzwidth="0x3" edc:desc="Sampling Number">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No accumulation" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ACC2" edc:desc="2 results accumulated" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ACC4" edc:desc="4 results accumulated" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ACC8" edc:desc="8 results accumulated" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ACC16" edc:desc="16 results accumulated" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ACC32" edc:desc="32 results accumulated" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ACC64" edc:desc="64 results accumulated" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="LEFTADJ" edc:nzwidth="0x1" edc:desc="Left Adjust"/>
              <edc:SFRFieldDef edc:cname="FREERUN" edc:nzwidth="0x1" edc:desc="Free Running"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x606">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="SAMPRDY" edc:nzwidth="0x1" edc:desc="Sample Ready Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:nzwidth="0x1" edc:desc="Window Comparator Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RESOVR" edc:nzwidth="0x1" edc:desc="Result Overwrite Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="SAMPOVR" edc:nzwidth="0x1" edc:desc="Sample Overwrite Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TRIGOVR" edc:nzwidth="0x1" edc:desc="Trigger Overrun Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x607">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Flag"/>
              <edc:SFRFieldDef edc:cname="SAMPRDY" edc:nzwidth="0x1" edc:desc="Sample Ready Flag"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:nzwidth="0x1" edc:desc="Window Comparator Flag"/>
              <edc:SFRFieldDef edc:cname="RESOVR" edc:nzwidth="0x1" edc:desc="Result OverwriteFlag"/>
              <edc:SFRFieldDef edc:cname="SAMPOVR" edc:nzwidth="0x1" edc:desc="Sample OverwriteFlag"/>
              <edc:SFRFieldDef edc:cname="TRIGOVR" edc:nzwidth="0x1" edc:desc="Trigger OverrunFlag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x608">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="ADCBUSY" edc:nzwidth="0x1" edc:desc="ADC Busy"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x609">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="COMMAND" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x60A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x3" edc:desc="Start Conversion">
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop/No ongoing conv" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IMMEDIATE" edc:desc="Start Immediately" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="MUXPOS_WRITE" edc:desc="Start after a write to MUXPOS" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT_TTRIGGER" edc:desc="Start upon event reception" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Mode">
                <edc:SFRFieldSemantic edc:cname="SINGLE_8BIT" edc:desc="Single 8-bit conv" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE_10BIT" edc:desc="Single 10-bit conv" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SERIES" edc:desc="Series of 10-bit conv" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="Burst of 10-bit conv" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ACCTEST" edc:desc="Acc test mode for FuSa" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="MUXPOS" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x60B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x7" edc:desc="Analog Channel Selection Bits">
                <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC input pin 0" edc:when="(field &amp; 0x7F) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC input pin 1" edc:when="(field &amp; 0x7F) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC input pin 2" edc:when="(field &amp; 0x7F) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC input pin 3" edc:when="(field &amp; 0x7F) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC input pin 4" edc:when="(field &amp; 0x7F) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC input pin 5" edc:when="(field &amp; 0x7F) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC input pin 6" edc:when="(field &amp; 0x7F) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC input pin 7" edc:when="(field &amp; 0x7F) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="AIN16" edc:desc="ADC input pin 16" edc:when="(field &amp; 0x7F) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="AIN17" edc:desc="ADC input pin 17" edc:when="(field &amp; 0x7F) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="AIN18" edc:desc="ADC input pin 18" edc:when="(field &amp; 0x7F) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="AIN19" edc:desc="ADC input pin 19" edc:when="(field &amp; 0x7F) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AIN20" edc:desc="ADC input pin 20" edc:when="(field &amp; 0x7F) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="AIN21" edc:desc="ADC input pin 21" edc:when="(field &amp; 0x7F) == 0x15"/>
                <edc:SFRFieldSemantic edc:cname="AIN22" edc:desc="ADC input pin 22" edc:when="(field &amp; 0x7F) == 0x16"/>
                <edc:SFRFieldSemantic edc:cname="AIN23" edc:desc="ADC input pin 23" edc:when="(field &amp; 0x7F) == 0x17"/>
                <edc:SFRFieldSemantic edc:cname="AIN24" edc:desc="ADC input pin 24" edc:when="(field &amp; 0x7F) == 0x18"/>
                <edc:SFRFieldSemantic edc:cname="AIN25" edc:desc="ADC input pin 25" edc:when="(field &amp; 0x7F) == 0x19"/>
                <edc:SFRFieldSemantic edc:cname="AIN26" edc:desc="ADC input pin 26" edc:when="(field &amp; 0x7F) == 0x1A"/>
                <edc:SFRFieldSemantic edc:cname="AIN27" edc:desc="ADC input pin 27" edc:when="(field &amp; 0x7F) == 0x1B"/>
                <edc:SFRFieldSemantic edc:cname="AIN31" edc:desc="ADC input pin 31" edc:when="(field &amp; 0x7F) == 0x1F"/>
                <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Ground" edc:when="(field &amp; 0x7F) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="TEMPSENSE" edc:desc="Temperature sensor" edc:when="(field &amp; 0x7F) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="VDDDIV10" edc:desc="VDD/10" edc:when="(field &amp; 0x7F) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="DACREF0" edc:desc="AC0 DAC voltage" edc:when="(field &amp; 0x7F) == 0x49"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="RESULT" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0x60C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="RESULT" edc:nzwidth="0x10" edc:desc="ADC Result"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="SAMPLE" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x60E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPLE" edc:nzwidth="0x10" edc:desc="ADC Sample"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="WINLT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x610">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="WINLT" edc:nzwidth="0x10" edc:desc="Window Low Threshold"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="WINHT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x612">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="WINHT" edc:nzwidth="0x10" edc:desc="Window High Threshold"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x614">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="TEMP" edc:nzwidth="0x8" edc:desc="Temporary"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6B" edc:_addr="0x615"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x680">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="HYSMODE" edc:nzwidth="0x2" edc:desc="Hysteresis Mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No hysteresis" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SMALL" edc:desc="Small hysteresis" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Medium hysteresis" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LARGE" edc:desc="Large hysteresis" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="POWER" edc:nzwidth="0x2" edc:desc="Power profile">
                <edc:SFRFieldSemantic edc:cname="PROFILE0" edc:desc="Power profile 0, lowest consumption and highest response time." edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PROFILE1" edc:desc="Power profile 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PROFILE2" edc:desc="Power profile 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PROFILE3" edc:desc="Power profile 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Pad Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x681"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="MUXCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x682">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="AINN0" edc:desc="Negative Pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AINN1" edc:desc="Negative Pin 1" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AINN2" edc:desc="Negative Pin 2" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DACREF" edc:desc="DAC Reference" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="AINP0" edc:desc="Positive Pin 0" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AINP3" edc:desc="Positive Pin 3" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="AINP4" edc:desc="Positive Pin 4" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INITVAL" edc:nzwidth="0x1" edc:desc="AC Output Initial Value">
                <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Output initialized to 0" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Output initialized to 1" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INVERT" edc:nzwidth="0x1" edc:desc="Invert AC Output"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x683"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="DAC0REF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:_addr="0x685">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="DACREF" edc:nzwidth="0x8" edc:desc="DACREF"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="--nn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x31" edc:_addr="0x686">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INTMODE" edc:nzwidth="0x2" edc:desc="Interrupt Mode">
                <edc:SFRFieldSemantic edc:cname="BOTHEDGE" edc:desc="Positive and negative inputs crosses" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NEGEDGE" edc:desc="Positive input goes below negative input" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="POSEDGE" edc:desc="Positive input goes above negative input" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="---r---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x11" edc:_addr="0x687">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="CMPIF" edc:nzwidth="0x1" edc:desc="Analog Comparator Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="CMPSTATE" edc:nzwidth="0x1" edc:desc="Analog Comparator State"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x178" edc:_addr="0x688"/>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXDATAL" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x800">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="RX Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXDATAH" edc:nzwidth="0x8" edc:access="rr---rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x801">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Receiver Data Register"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXDATAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x802">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Transmit Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXDATAH" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x803">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Transmit Data Register (CHSIZE=9bit)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="rnrnn-nn" edc:por="00100000" edc:mclr="00100000" edc:impl="0xFB" edc:_addr="0x804">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="WFB" edc:nzwidth="0x1" edc:desc="Wait For Break"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:nzwidth="0x1" edc:desc="Break Detected Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Flag"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x805">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="RS485" edc:nzwidth="0x1" edc:desc="RS485 Mode internal transmitter">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="RS485 Mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:nzwidth="0x1" edc:desc="Auto-baud Error Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:nzwidth="0x1" edc:desc="Loop-back Mode Enable"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:nzwidth="0x1" edc:desc="Receiver Start Frame Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x806">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:nzwidth="0x2" edc:desc="Receiver Mode">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:nzwidth="0x1" edc:desc="Open Drain Mode Enable"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:nzwidth="0x1" edc:desc="Start Frame Detection Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Reciever enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000011" edc:mclr="00000011" edc:_addr="0x807">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
                <edc:SFRFieldSemantic edc:cname="5BIT" edc:desc="Character size: 5 bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6BIT" edc:desc="Character size: 6 bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7BIT" edc:desc="Character size: 7 bit" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="Character size: 8 bit" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="9BITL" edc:desc="Character size: 9 bit read low byte first" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9BITH" edc:desc="Character size: 9 bit read high byte first" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-2"/>
              <edc:SFRFieldDef edc:cname="UCPHA" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Clock Phase"/>
              <edc:SFRFieldDef edc:cname="UDORD" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Data Order"/>
              <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
                <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x2" edc:desc="Parity Mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No Parity" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x2" edc:desc="Communication Mode">
                <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous Mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IRCOM" edc:desc="Infrared Communication" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MSPI" edc:desc="SPI Host Mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x808"/>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nn------" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC0" edc:_addr="0x80A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="ABW" edc:nzwidth="0x2" edc:desc="Auto Baud Window">
                <edc:SFRFieldSemantic edc:cname="WDW0" edc:desc="18% tolerance" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="WDW1" edc:desc="15% tolerance" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WDW2" edc:desc="21% tolerance" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="WDW3" edc:desc="25% tolerance" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x80B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x80C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="IREI" edc:nzwidth="0x1" edc:desc="IrDA Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXPLCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x80D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="TXPL" edc:nzwidth="0x8" edc:desc="Transmit pulse length"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXPLCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x80E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x7" edc:desc="Receiver Pulse Lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x11" edc:_addr="0x80F"/>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="RXDATAL" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x820">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="RX Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="RXDATAH" edc:nzwidth="0x8" edc:access="rr---rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x821">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Receiver Data Register"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="TXDATAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x822">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Transmit Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="TXDATAH" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x823">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Transmit Data Register (CHSIZE=9bit)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="rnrnn-nn" edc:por="00100000" edc:mclr="00100000" edc:impl="0xFB" edc:_addr="0x824">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="WFB" edc:nzwidth="0x1" edc:desc="Wait For Break"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:nzwidth="0x1" edc:desc="Break Detected Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Flag"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x825">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="RS485" edc:nzwidth="0x1" edc:desc="RS485 Mode internal transmitter">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="RS485 Mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:nzwidth="0x1" edc:desc="Auto-baud Error Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:nzwidth="0x1" edc:desc="Loop-back Mode Enable"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:nzwidth="0x1" edc:desc="Receiver Start Frame Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x826">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:nzwidth="0x2" edc:desc="Receiver Mode">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:nzwidth="0x1" edc:desc="Open Drain Mode Enable"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:nzwidth="0x1" edc:desc="Start Frame Detection Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Reciever enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000011" edc:mclr="00000011" edc:_addr="0x827">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
                <edc:SFRFieldSemantic edc:cname="5BIT" edc:desc="Character size: 5 bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6BIT" edc:desc="Character size: 6 bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7BIT" edc:desc="Character size: 7 bit" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="Character size: 8 bit" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="9BITL" edc:desc="Character size: 9 bit read low byte first" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9BITH" edc:desc="Character size: 9 bit read high byte first" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-2"/>
              <edc:SFRFieldDef edc:cname="UCPHA" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Clock Phase"/>
              <edc:SFRFieldDef edc:cname="UDORD" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Data Order"/>
              <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
                <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x2" edc:desc="Parity Mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No Parity" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x2" edc:desc="Communication Mode">
                <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous Mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IRCOM" edc:desc="Infrared Communication" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MSPI" edc:desc="SPI Host Mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x828"/>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nn------" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC0" edc:_addr="0x82A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="ABW" edc:nzwidth="0x2" edc:desc="Auto Baud Window">
                <edc:SFRFieldSemantic edc:cname="WDW0" edc:desc="18% tolerance" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="WDW1" edc:desc="15% tolerance" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WDW2" edc:desc="21% tolerance" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="WDW3" edc:desc="25% tolerance" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x82B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x82C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="IREI" edc:nzwidth="0x1" edc:desc="IrDA Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="TXPLCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x82D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="TXPL" edc:nzwidth="0x8" edc:desc="Transmit pulse length"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="RXPLCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x82E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x7" edc:desc="Receiver Pulse Lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xD1" edc:_addr="0x82F"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n-nnnn-" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5E" edc:_addr="0x900">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FMPEN" edc:nzwidth="0x1" edc:desc="Fast-mode Plus Enable">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Operating in Standard-mode or Fast-mode" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ON" edc:desc="Operating in Fast-mode Plus" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No SDA Hold Delay" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50NS" edc:desc="Short SDA hold time" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="300NS" edc:desc="Meets SMBUS 2.0 specification under typical conditions" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="500NS" edc:desc="Meets SMBUS 2.0 specificaiton across all corners" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x1" edc:desc="SDA Setup Time">
                <edc:SFRFieldSemantic edc:cname="4CYC" edc:desc="SDA setup time is four clock cycles" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CYC" edc:desc="SDA setup time is eight clock cycle" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="INPUTLVL" edc:nzwidth="0x1" edc:desc="Input voltage transition level">
                <edc:SFRFieldSemantic edc:cname="I2C" edc:desc="I2C input voltage transition level" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SMBUS" edc:desc="SMBus 3.0 input voltage transition level" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x901"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x902">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run">
                <edc:SFRFieldSemantic edc:cname="HALT" edc:desc="The peripheral is halted in Break Debug mode and ignores events" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RUN" edc:desc="The peripheral will continue to run in Break Debug mode when the CPU is halted" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MCTRLA" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x903">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
              <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x2" edc:desc="Inactive Bus Time-Out">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Bus time-out disabled. I2C." edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50US" edc:desc="50us - SMBus" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="100US" edc:desc="100us" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="200US" edc:desc="200us" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WIEN" edc:nzwidth="0x1" edc:desc="Write Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RIEN" edc:nzwidth="0x1" edc:desc="Read Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MCTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x904">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="MCMD" edc:nzwidth="0x2" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="REPSTART" edc:desc="Execute Acknowledge Action followed by repeated Start." edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RECVTRANS" edc:desc="Execute Acknowledge Action followed by a byte read/write operation. Read/write is defined by DIR." edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Execute Acknowledge Action followed by issuing a Stop condition." edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FLUSH" edc:nzwidth="0x1" edc:desc="Flush"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MSTATUS" edc:nzwidth="0x8" edc:access="nnnrnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x905">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
                <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Unknown bus state" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Bus is idle" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="This TWI controls the bus" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="The bus is busy" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
              <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:nzwidth="0x1" edc:desc="Received Acknowledge"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
              <edc:SFRFieldDef edc:cname="WIF" edc:nzwidth="0x1" edc:desc="Write Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RIF" edc:nzwidth="0x1" edc:desc="Read Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MBAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x906">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MADDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x907">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MDATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x908">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SCTRLA" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x909">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
              <edc:SFRFieldDef edc:cname="PMEN" edc:nzwidth="0x1" edc:desc="Address Recognition Mode"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PIEN" edc:nzwidth="0x1" edc:desc="Stop Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="APIEN" edc:nzwidth="0x1" edc:desc="Address or Stop Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DIEN" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SCTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x90A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="SCMD" edc:nzwidth="0x2" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="COMPTRANS" edc:desc="Complete transaction" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RESPONSE" edc:desc="Used in response to an interrupt" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SSTATUS" edc:nzwidth="0x8" edc:access="rrrrnnrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x90B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x1" edc:desc="Address or Stop">
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="A Stop condition generated the interrupt on APIF flag" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADR" edc:desc="Address detection generated the interrupt on APIF flag" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
              <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:nzwidth="0x1" edc:desc="Received Acknowledge"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
              <edc:SFRFieldDef edc:cname="APIF" edc:nzwidth="0x1" edc:desc="Address or Stop Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DIF" edc:nzwidth="0x1" edc:desc="Data Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SADDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x90C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SDATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x90D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SADDRMASK" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x90E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ADDREN" edc:nzwidth="0x1" edc:desc="Address Mask Enable"/>
              <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x7" edc:desc="Address Mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x31" edc:_addr="0x90F"/>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x940">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Module"/>
              <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x2" edc:desc="Prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER / 4" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER / 16" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER / 64" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_PER / 128" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CLK2X" edc:nzwidth="0x1" edc:desc="Enable Double Speed"/>
              <edc:SFRFieldDef edc:cname="MASTER" edc:nzwidth="0x1" edc:desc="Host Operation Enable"/>
              <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order Setting"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x941">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="SPI Mode">
                <edc:SFRFieldSemantic edc:cname="0" edc:desc="SPI Mode 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="1" edc:desc="SPI Mode 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="SPI Mode 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="3" edc:desc="SPI Mode 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SSD" edc:nzwidth="0x1" edc:desc="SPI Select Disable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFWR" edc:nzwidth="0x1" edc:desc="Buffer Mode Wait for Receive"/>
              <edc:SFRFieldDef edc:cname="BUFEN" edc:nzwidth="0x1" edc:desc="Buffer Mode Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="nnnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF1" edc:_addr="0x942">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="IE" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIE" edc:nzwidth="0x1" edc:desc="SPI Select Trigger Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transfer Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF1" edc:_addr="0x943">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIF" edc:nzwidth="0x1" edc:desc="SPI Select Trigger Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="WRCOL" edc:nzwidth="0x1" edc:desc="Write Collision"/>
              <edc:SFRFieldDef edc:cname="IF" edc:nzwidth="0x1" edc:desc="Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x944"/>
        <edc:AdjustPoint edc:offset="0x1BB" edc:_addr="0x945"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xB00">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER/2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="Use CLK_TCA from TCA0" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Count on event edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:nzwidth="0x1" edc:desc="Synchronize Update"/>
              <edc:SFRFieldDef edc:cname="CASCADE" edc:nzwidth="0x1" edc:desc="Cascade two timers"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0xB01">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:nzwidth="0x3" edc:desc="Timer Mode">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:nzwidth="0x1" edc:desc="Pin Output Enable"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:nzwidth="0x1" edc:desc="Pin Initial State"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:nzwidth="0x1" edc:desc="Asynchronous Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB02"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-n-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x51" edc:_addr="0xB04">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:nzwidth="0x1" edc:desc="Event Input Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Event Edge"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Input Capture Noise Cancellation Filter"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB05">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB06">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB07">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="RUN" edc:nzwidth="0x1" edc:desc="Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB08">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xB09"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0xB0A"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CCMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xB0C"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB0E"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xB10">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER/2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="Use CLK_TCA from TCA0" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Count on event edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:nzwidth="0x1" edc:desc="Synchronize Update"/>
              <edc:SFRFieldDef edc:cname="CASCADE" edc:nzwidth="0x1" edc:desc="Cascade two timers"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0xB11">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:nzwidth="0x3" edc:desc="Timer Mode">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:nzwidth="0x1" edc:desc="Pin Output Enable"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:nzwidth="0x1" edc:desc="Pin Initial State"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:nzwidth="0x1" edc:desc="Asynchronous Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xB12"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-n-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x51" edc:_addr="0xB14">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:nzwidth="0x1" edc:desc="Event Input Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Event Edge"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Input Capture Noise Cancellation Filter"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB15">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xB16">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB17">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="RUN" edc:nzwidth="0x1" edc:desc="Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xB18">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xB19"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0xB1A"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CCMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xB1C"/>
        <edc:AdjustPoint edc:offset="0xE2" edc:_addr="0xB1E"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:_addr="0xC00">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="MAXEP" edc:nzwidth="0x4" edc:desc="Maximum Endpoint Address"/>
              <edc:SFRFieldDef edc:cname="STFRNUM" edc:nzwidth="0x1" edc:desc="Store Frame Number Enable"/>
              <edc:SFRFieldDef edc:cname="FIFOEN" edc:nzwidth="0x1" edc:desc="Transaction Complete FIFO Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="USB Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0xC01">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="ATTACH" edc:nzwidth="0x1" edc:desc="Attach"/>
              <edc:SFRFieldDef edc:cname="GNAK" edc:nzwidth="0x1" edc:desc="Respond with NAK on all Endpoints"/>
              <edc:SFRFieldDef edc:cname="GNAUTO" edc:nzwidth="0x1" edc:desc="Set GNAK Automatically after SETUP"/>
              <edc:SFRFieldDef edc:cname="URESUME" edc:nzwidth="0x1" edc:desc="Send Upstream Resume"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="BUSSTATE" edc:nzwidth="0x8" edc:access="---rrrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0xC02">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="BUSRST" edc:nzwidth="0x1" edc:desc="Bus Reset"/>
              <edc:SFRFieldDef edc:cname="SUSPENDED" edc:nzwidth="0x1" edc:desc="Bus Suspended"/>
              <edc:SFRFieldDef edc:cname="DRESUME" edc:nzwidth="0x1" edc:desc="Downstram Resume"/>
              <edc:SFRFieldDef edc:cname="URESUME" edc:nzwidth="0x1" edc:desc="Upstream Resume"/>
              <edc:SFRFieldDef edc:cname="WTRSM" edc:nzwidth="0x1" edc:desc="Wait Time Resume"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="ADDR" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xC03">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x7" edc:desc="Device Address"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="FIFOWP" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="11111111" edc:mclr="11111111" edc:impl="0x1F" edc:_addr="0xC04">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="FIFOWP" edc:nzwidth="0x5" edc:desc="FIFO Write Pointer"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="FIFORP" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="11111111" edc:mclr="11111111" edc:impl="0x1F" edc:_addr="0xC05">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="FIFORP" edc:nzwidth="0x5" edc:desc="FIFO Read Pointer"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="EPPTR" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0xC06">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="EPPTR" edc:nzwidth="0x10" edc:desc="Endpoint Configuration Table Pointer"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="INTCTRLA" edc:nzwidth="0x8" edc:access="nnnnnnn-" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFE" edc:_addr="0xC08">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="UNF" edc:nzwidth="0x1" edc:desc="Underflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="STALLED" edc:nzwidth="0x1" edc:desc="STALL Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RESET" edc:nzwidth="0x1" edc:desc="Reset Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RESUME" edc:nzwidth="0x1" edc:desc="Resume Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="SUSPEND" edc:nzwidth="0x1" edc:desc="Suspend Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="SOF" edc:nzwidth="0x1" edc:desc="Start Of Frame Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="INTCTRLB" edc:nzwidth="0x8" edc:access="--n---nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x23" edc:_addr="0xC09">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="SETUP" edc:nzwidth="0x1" edc:desc="SETUP Transaction Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="GNDONE" edc:nzwidth="0x1" edc:desc="GNAK Operation Done Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="TRNCOMPL" edc:nzwidth="0x1" edc:desc="Transaction Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="INTFLAGSA" edc:nzwidth="0x8" edc:access="nnnnnnn-" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFE" edc:_addr="0xC0A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="UNF" edc:nzwidth="0x1" edc:desc="Underflow Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="STALLED" edc:nzwidth="0x1" edc:desc="STALL Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RESET" edc:nzwidth="0x1" edc:desc="Reset Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RESUME" edc:nzwidth="0x1" edc:desc="Resume Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="SUSPEND" edc:nzwidth="0x1" edc:desc="Suspend Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="SOF" edc:nzwidth="0x1" edc:desc="Start Of Frame Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="INTFLAGSB" edc:nzwidth="0x8" edc:access="--n--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x27" edc:_addr="0xC0B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="SETUP" edc:nzwidth="0x1" edc:desc="SETUP Transaction Complete Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="GNDONE" edc:nzwidth="0x1" edc:desc="GNAK Operation Done Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RMWBUSY" edc:nzwidth="0x1" edc:desc="RMW Busy Flag"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="TRNCOMPL" edc:nzwidth="0x1" edc:desc="Transaction Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x34" edc:_addr="0xC0C"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS0OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xC40">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS0OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xC41">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS0INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xC42">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS0INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xC43">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xC44"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS1OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xC80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS1OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xC81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS1INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xC82">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS1INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xC83">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xC84"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS2OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xCC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS2OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xCC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS2INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xCC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS2INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xCC3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xCC4"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS3OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD00">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS3OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD01">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS3INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD02">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS3INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD03">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xD04"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS4OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD40">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS4OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD41">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS4INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD42">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS4INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD43">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xD44"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS5OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS5OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS5INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD82">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS5INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xD83">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xD84"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS6OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xDC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS6OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xDC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS6INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xDC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS6INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xDC3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xDC4"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS7OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE00">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS7OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE01">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS7INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE02">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS7INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE03">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xE04"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS8OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE40">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS8OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE41">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS8INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE42">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS8INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE43">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xE44"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS9OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS9OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS9INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE82">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS9INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xE83">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xE84"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS10OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xEC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS10OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xEC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS10INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xEC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS10INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xEC3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xEC4"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS11OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF00">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:MuxedSFRDef edc:nzwidth="0x8" edc:_addr="0xF01">
          <edc:SelectSFR>
            <edc:SFRDef ltx:memberofperipheral="SYSCFG" edc:cname="REVID" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF01"/>
          </edc:SelectSFR>
          <edc:SelectSFR>
            <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS11OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF01">
              <edc:SFRModeList>
                <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
                  <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
                </edc:SFRMode>
              </edc:SFRModeList>
            </edc:SFRDef>
          </edc:SelectSFR>
        </edc:MuxedSFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS11INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF02">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS11INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF03">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xF04"/>
        <edc:SFRDef ltx:memberofperipheral="SYSCFG" edc:cname="VUSBCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xF06">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SYSCFG">
              <edc:SFRFieldDef edc:cname="USBVREG" edc:nzwidth="0x1" edc:desc="USB Voltage Regulator">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="USBVREG is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="USBVREG is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x39" edc:_addr="0xF07"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS12OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF40">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS12OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF41">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS12INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF42">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS12INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF43">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xF44"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS13OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS13OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS13INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF82">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS13INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xF83">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xF84"/>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS14OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xFC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS14OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xFC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS14INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xFC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS14INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xFC3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0xFC4"/>
        <edc:MuxedSFRDef edc:nzwidth="0x8" edc:_addr="0x1000">
          <edc:SelectSFR>
            <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x1000">
              <edc:SFRModeList>
                <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
                  <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x7" edc:desc="Command">
                    <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x7F) == 0x00"/>
                    <edc:SFRFieldSemantic edc:cname="NOOP" edc:desc="No Operation" edc:when="(field &amp; 0x7F) == 0x01"/>
                    <edc:SFRFieldSemantic edc:cname="FLWR" edc:desc="Flash Write" edc:when="(field &amp; 0x7F) == 0x02"/>
                    <edc:SFRFieldSemantic edc:cname="FLPER" edc:desc="Flash Page Erase" edc:when="(field &amp; 0x7F) == 0x08"/>
                    <edc:SFRFieldSemantic edc:cname="FLMPER2" edc:desc="Flash Multi-Page Erase 2 pages" edc:when="(field &amp; 0x7F) == 0x09"/>
                    <edc:SFRFieldSemantic edc:cname="FLMPER4" edc:desc="Flash Multi-Page Erase 4 pages" edc:when="(field &amp; 0x7F) == 0x0A"/>
                    <edc:SFRFieldSemantic edc:cname="FLMPER8" edc:desc="Flash Multi-Page Erase 8 pages" edc:when="(field &amp; 0x7F) == 0x0B"/>
                    <edc:SFRFieldSemantic edc:cname="FLMPER16" edc:desc="Flash Multi-Page Erase 16 pages" edc:when="(field &amp; 0x7F) == 0x0C"/>
                    <edc:SFRFieldSemantic edc:cname="FLMPER32" edc:desc="Flash Multi-Page Erase 32 pages" edc:when="(field &amp; 0x7F) == 0x0D"/>
                    <edc:SFRFieldSemantic edc:cname="EEWR" edc:desc="EEPROM Write" edc:when="(field &amp; 0x7F) == 0x12"/>
                    <edc:SFRFieldSemantic edc:cname="EEERWR" edc:desc="EEPROM Erase and Write" edc:when="(field &amp; 0x7F) == 0x13"/>
                    <edc:SFRFieldSemantic edc:cname="EEBER" edc:desc="EEPROM Byte Erase" edc:when="(field &amp; 0x7F) == 0x18"/>
                    <edc:SFRFieldSemantic edc:cname="EEMBER2" edc:desc="EEPROM Multi-Byte Erase 2 bytes" edc:when="(field &amp; 0x7F) == 0x19"/>
                    <edc:SFRFieldSemantic edc:cname="EEMBER4" edc:desc="EEPROM Multi-Byte Erase 4 bytes" edc:when="(field &amp; 0x7F) == 0x1A"/>
                    <edc:SFRFieldSemantic edc:cname="EEMBER8" edc:desc="EEPROM Multi-Byte Erase 8 bytes" edc:when="(field &amp; 0x7F) == 0x1B"/>
                    <edc:SFRFieldSemantic edc:cname="EEMBER16" edc:desc="EEPROM Multi-Byte Erase 16 bytes" edc:when="(field &amp; 0x7F) == 0x1C"/>
                    <edc:SFRFieldSemantic edc:cname="EEMBER32" edc:desc="EEPROM Multi-Byte Erase 32 bytes" edc:when="(field &amp; 0x7F) == 0x1D"/>
                    <edc:SFRFieldSemantic edc:cname="CHER" edc:desc="Chip Erase Command" edc:when="(field &amp; 0x7F) == 0x20"/>
                    <edc:SFRFieldSemantic edc:cname="EECHER" edc:desc="EEPROM Erase Command" edc:when="(field &amp; 0x7F) == 0x30"/>
                  </edc:SFRFieldDef>
                </edc:SFRMode>
              </edc:SFRModeList>
            </edc:SFRDef>
          </edc:SelectSFR>
          <edc:SelectSFR>
            <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS15OUTCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1000">
              <edc:SFRModeList>
                <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
                  <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
                </edc:SFRMode>
              </edc:SFRModeList>
            </edc:SFRDef>
          </edc:SelectSFR>
        </edc:MuxedSFRDef>
        <edc:MuxedSFRDef edc:nzwidth="0x8" edc:_addr="0x1001">
          <edc:SelectSFR>
            <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00110000" edc:mclr="00110000" edc:impl="0xBF" edc:_addr="0x1001">
              <edc:SFRModeList>
                <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
                  <edc:SFRFieldDef edc:cname="APPCODEWP" edc:nzwidth="0x1" edc:desc="Application Code Write Protect"/>
                  <edc:SFRFieldDef edc:cname="BOOTRP" edc:nzwidth="0x1" edc:desc="Boot Read Protect"/>
                  <edc:SFRFieldDef edc:cname="APPDATAWP" edc:nzwidth="0x1" edc:desc="Application Data Write Protect"/>
                  <edc:SFRFieldDef edc:cname="EEWP" edc:nzwidth="0x1" edc:desc="EEPROM Write Protect"/>
                  <edc:SFRFieldDef edc:cname="FLMAP" edc:nzwidth="0x2" edc:desc="Flash Mapping in Data space">
                    <edc:SFRFieldSemantic edc:cname="SECTION0" edc:desc="Flash section 0" edc:when="(field &amp; 0x3) == 0x00"/>
                    <edc:SFRFieldSemantic edc:cname="SECTION1" edc:desc="Flash section 1" edc:when="(field &amp; 0x3) == 0x01"/>
                    <edc:SFRFieldSemantic edc:cname="SECTION2" edc:desc="Flash section 2" edc:when="(field &amp; 0x3) == 0x02"/>
                    <edc:SFRFieldSemantic edc:cname="SECTION3" edc:desc="Flash section 3" edc:when="(field &amp; 0x3) == 0x03"/>
                  </edc:SFRFieldDef>
                  <edc:AdjustPoint edc:offset="0x1"/>
                  <edc:SFRFieldDef edc:cname="FLMAPLOCK" edc:nzwidth="0x1" edc:desc="Flash Mapping Lock"/>
                </edc:SFRMode>
              </edc:SFRModeList>
            </edc:SFRDef>
          </edc:SelectSFR>
          <edc:SelectSFR>
            <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS15OUTSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1001">
              <edc:SFRModeList>
                <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
                  <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
                </edc:SFRMode>
              </edc:SFRModeList>
            </edc:SFRDef>
          </edc:SelectSFR>
        </edc:MuxedSFRDef>
        <edc:MuxedSFRDef edc:nzwidth="0x8" edc:_addr="0x1002">
          <edc:SelectSFR>
            <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x1002">
              <edc:SFRModeList>
                <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
                  <edc:SFRFieldDef edc:cname="UROWWP" edc:nzwidth="0x1" edc:desc="User Row Write Protect"/>
                  <edc:SFRFieldDef edc:cname="BOOTROWWP" edc:nzwidth="0x1" edc:desc="Boot Row Write Protect"/>
                </edc:SFRMode>
              </edc:SFRModeList>
            </edc:SFRDef>
          </edc:SelectSFR>
          <edc:SelectSFR>
            <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS15INCLR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1002">
              <edc:SFRModeList>
                <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
                  <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
                </edc:SFRMode>
              </edc:SFRModeList>
            </edc:SFRDef>
          </edc:SelectSFR>
        </edc:MuxedSFRDef>
        <edc:SFRDef ltx:memberofperipheral="USB0" edc:cname="STATUS15INSET" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1003">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USB0">
              <edc:SFRFieldDef edc:cname="RMWSTATUS" edc:nzwidth="0x8" edc:desc="Read-Modify-Write Endpoint STATUS"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x1004">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="EEREADY" edc:nzwidth="0x1" edc:desc="EEPROM Ready"/>
              <edc:SFRFieldDef edc:cname="FLREADY" edc:nzwidth="0x1" edc:desc="Flash Ready"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x1005">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="EEREADY" edc:nzwidth="0x1" edc:desc="EEPROM Ready"/>
              <edc:SFRFieldDef edc:cname="FLREADY" edc:nzwidth="0x1" edc:desc="Flash Ready"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-rrr--rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:_addr="0x1006">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="EEBUSY" edc:nzwidth="0x1" edc:desc="EEPROM busy"/>
              <edc:SFRFieldDef edc:cname="FLBUSY" edc:nzwidth="0x1" edc:desc="Flash busy"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x3" edc:desc="Write error">
                <edc:SFRFieldSemantic edc:cname="NOERROR" edc:desc="No Error" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INVALIDCMD" edc:desc="Write command not selected or not valid" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WRITEPROTECT" edc:desc="Write to section not allowed" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CMDCOLLISION" edc:desc="Selecting new write command while programming is ongoing" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1007"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x1008"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x100C"/>
      </edc:SFRDataSector>
      <edc:ConfigFuseSector edc:regionid="LOCKBITS" edc:beginaddr="0x1040" edc:endaddr="0x1044" edc:magicoffset="0x830000" atdf:pagesize="0x1" edc:rw="rw">
        <edc:DCRDef ltx:memberofperipheral="LOCK" edc:cname="KEY" edc:nzwidth="0x20" edc:impl="0xFFFFFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0x5CC5C55C" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x1040">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="LOCK">
              <edc:DCRFieldDef edc:cname="KEY" edc:nzwidth="0x20" edc:desc="Lock Key">
                <edc:DCRFieldSemantic edc:cname="NOLOCK" edc:desc="No locks" edc:when="(field &amp; 0xFFFFFFFF) == 0x5CC5C55C"/>
                <edc:DCRFieldSemantic edc:cname="RWLOCK" edc:desc="Read and write lock" edc:when="(field &amp; 0xFFFFFFFF) == 0xA33A3AA3"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
      </edc:ConfigFuseSector>
      <edc:ConfigFuseSector edc:regionid="FUSES" edc:beginaddr="0x1050" edc:endaddr="0x105C" edc:magicoffset="0x820000" atdf:pagesize="0x1" edc:rw="rw">
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="WDTCFG" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1050">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Watchdog Timeout Period">
                <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Watch-Dog timer Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:DCRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:DCRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:DCRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.0s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:DCRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.0s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="WINDOW" edc:nzwidth="0x4" edc:desc="Watchdog Window Timeout Period">
                <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Window mode off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:DCRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:DCRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:DCRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.0s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:DCRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.0s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="BODCFG" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1051">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="SLEEP" edc:nzwidth="0x2" edc:desc="BOD Operation in Sleep Mode">
                <edc:DCRFieldSemantic edc:cname="DISABLE" edc:desc="BOD disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="ENABLE" edc:desc="BOD enabled in continuous mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="SAMPLE" edc:desc="BOD enabled in sampled mode" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x2" edc:desc="BOD Operation in Active Mode">
                <edc:DCRFieldSemantic edc:cname="DISABLE" edc:desc="BOD disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="ENABLE" edc:desc="BOD enabled in continuous mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="SAMPLE" edc:desc="BOD enabled in sampled mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="ENABLEWAIT" edc:desc="BOD enabled in continuous mode. Execution is halted at wake-up until BOD is running." edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="SAMPFREQ" edc:nzwidth="0x1" edc:desc="BOD Sample Frequency">
                <edc:DCRFieldSemantic edc:cname="128Hz" edc:desc="Sample frequency is 128 Hz" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="32Hz" edc:desc="Sample frequency is 32 Hz" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="LVL" edc:nzwidth="0x3" edc:desc="BOD Level">
                <edc:DCRFieldSemantic edc:cname="BODLEVEL0" edc:desc="1.9V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="BODLEVEL1" edc:desc="2.45V" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="BODLEVEL2" edc:desc="2.7V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="BODLEVEL3" edc:desc="2.85V" edc:when="(field &amp; 0x7) == 0x03"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="OSCCFG" edc:nzwidth="0x8" edc:impl="0x7" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="-----nnn" edc:_addr="0x1052">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Frequency Select">
                <edc:DCRFieldSemantic edc:cname="OSCHF" edc:desc="1-32MHz internal oscillator" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="OSC32K" edc:desc="32.768kHz internal oscillator" edc:when="(field &amp; 0x7) == 0x01"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x1053"/>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="SYSCFG0" edc:nzwidth="0x8" edc:impl="0xFB" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xD0" edc:access="nnnnn-nn" edc:_addr="0x1055">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="EESAVE" edc:nzwidth="0x1" edc:desc="EEPROM Save">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="BROWSAVE" edc:nzwidth="0x1" edc:desc="Boot Row Save">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:DCRFieldDef edc:cname="RSTPINCFG" edc:nzwidth="0x1" edc:desc="Reset Pin Configuration">
                <edc:DCRFieldSemantic edc:cname="GPIO" edc:desc="GPIO mode" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="RST" edc:desc="Reset mode" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="UPDIPINCFG" edc:nzwidth="0x1" edc:desc="UPDI Pin Configuration">
                <edc:DCRFieldSemantic edc:cname="GPIO" edc:desc="GPIO Mode" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="UPDI" edc:desc="UPDI Mode" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="CRCSEL" edc:nzwidth="0x1" edc:desc="CRC Select">
                <edc:DCRFieldSemantic edc:cname="CRC16" edc:desc="Enable CRC16" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="CRC32" edc:desc="Enable CRC32" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="CRCSRC" edc:nzwidth="0x2" edc:desc="CRC Source">
                <edc:DCRFieldSemantic edc:cname="FLASH" edc:desc="CRC of full Flash (boot, application code and application data)" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="BOOT" edc:desc="CRC of boot section" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="BOOTAPP" edc:desc="CRC of application code and boot sections" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="NOCRC" edc:desc="No CRC" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="SYSCFG1" edc:nzwidth="0x8" edc:impl="0xF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x08" edc:access="----nnnn" edc:_addr="0x1056">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="SUT" edc:nzwidth="0x3" edc:desc="Startup Time">
                <edc:DCRFieldSemantic edc:cname="0MS" edc:desc="0 ms" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="1MS" edc:desc="1 ms" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="2MS" edc:desc="2 ms" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="4MS" edc:desc="4 ms" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="8MS" edc:desc="8 ms" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="16MS" edc:desc="16 ms" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="32MS" edc:desc="32 ms" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="64MS" edc:desc="64 ms" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="USBSINK" edc:nzwidth="0x1" edc:desc="USB Voltage Regulator Current Sink Enable">
                <edc:DCRFieldSemantic edc:cname="DISABLE" edc:desc="USB VREG can not sink current" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="ENABLE" edc:desc="USB VREG can sink current" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="CODESIZE" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1057">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="CODESIZE" edc:nzwidth="0x8" edc:desc="Code Section Size"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="BOOTSIZE" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1058">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="BOOTSIZE" edc:nzwidth="0x8" edc:desc="Boot Section Size"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1059"/>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="PDICFG" edc:nzwidth="0x10" edc:impl="0xFFF3" edc:unused="0x0" edc:useinchecksum="0xFFFF" edc:factorydefault="0x0003" edc:access="nnnnnnnnnnnn--nn" edc:_addr="0x105A">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="LEVEL" edc:nzwidth="0x2" edc:desc="Protection Level">
                <edc:DCRFieldSemantic edc:cname="NVMACCDIS" edc:desc="NVM Access through UPDI disabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="BASIC" edc:desc="UPDI and UPDI pins working normally" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:DCRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:DCRFieldDef edc:cname="KEY" edc:nzwidth="0xC" edc:desc="NVM Protection Activation Key">
                <edc:DCRFieldSemantic edc:cname="NOTACT" edc:desc="Not Active" edc:when="(field &amp; 0xFFF) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="NVMACT" edc:desc="NVM Protection Active" edc:when="(field &amp; 0xFFF) == 0xB45"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
      </edc:ConfigFuseSector>
      <edc:DeviceIDSector edc:regionid="SIGNATURES" edc:beginaddr="0x1080" edc:endaddr="0x1083" atdf:pagesize="0x80" edc:value="0x1E953F" edc:mask="0xffffff" edc:rw="r">
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1080"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1081"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID2" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1082"/>
      </edc:DeviceIDSector>
      <edc:DeviceIDSector edc:regionid="PROD_SIGNATURES" edc:beginaddr="0x1083" edc:endaddr="0x1100" atdf:pagesize="0x80" edc:value="0x1E953F" edc:mask="0xffffff" edc:rw="r">
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1083"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="TEMPSENSE0" edc:nzwidth="0x10" edc:impl="0xFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFF" edc:factorydefault="0x0" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0x1084">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="SIGROW">
              <edc:DCRFieldDef edc:cname="TEMPSENSE0" edc:nzwidth="0x10" edc:desc="Temperature Calibration 0"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="TEMPSENSE1" edc:nzwidth="0x10" edc:impl="0xFFFF" edc:unused="0x0" edc:useinchecksum="0xFFFF" edc:factorydefault="0x0" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0x1086">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="SIGROW">
              <edc:DCRFieldDef edc:cname="TEMPSENSE1" edc:nzwidth="0x10" edc:desc="Temperature Calibration 1"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x1088"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1090"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1091"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM2" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1092"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM3" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1093"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM4" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1094"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM5" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1095"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM6" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1096"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM7" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1097"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM8" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1098"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM9" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1099"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM10" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x109A"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM11" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x109B"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM12" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x109C"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM13" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x109D"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM14" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x109E"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM15" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x109F"/>
      </edc:DeviceIDSector>
      <edc:UserIDSector edc:regionid="BOOTROW" edc:beginaddr="0x1100" edc:endaddr="0x1200" edc:magicoffset="0x860000" atdf:pagesize="0x100" edc:rw="rw">
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1100"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1101"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1102"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1103"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1104"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1105"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1106"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1107"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1108"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1109"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW10" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x110A"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW11" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x110B"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW12" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x110C"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW13" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x110D"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW14" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x110E"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW15" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x110F"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW16" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1110"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW17" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1111"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW18" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1112"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW19" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1113"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW20" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1114"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW21" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1115"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW22" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1116"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW23" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1117"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW24" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1118"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW25" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1119"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW26" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x111A"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW27" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x111B"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW28" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x111C"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW29" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x111D"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW30" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x111E"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW31" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x111F"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW32" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1120"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW33" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1121"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW34" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1122"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW35" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1123"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW36" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1124"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW37" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1125"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW38" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1126"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW39" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1127"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW40" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1128"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW41" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1129"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW42" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x112A"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW43" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x112B"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW44" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x112C"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW45" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x112D"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW46" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x112E"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW47" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x112F"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW48" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1130"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW49" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1131"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW50" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1132"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW51" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1133"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW52" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1134"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW53" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1135"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW54" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1136"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW55" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1137"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW56" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1138"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW57" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1139"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW58" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x113A"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW59" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x113B"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW60" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x113C"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW61" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x113D"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW62" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x113E"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW63" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x113F"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW64" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1140"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW65" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1141"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW66" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1142"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW67" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1143"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW68" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1144"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW69" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1145"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW70" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1146"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW71" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1147"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW72" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1148"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW73" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1149"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW74" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x114A"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW75" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x114B"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW76" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x114C"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW77" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x114D"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW78" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x114E"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW79" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x114F"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW80" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1150"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW81" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1151"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW82" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1152"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW83" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1153"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW84" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1154"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW85" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1155"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW86" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1156"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW87" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1157"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW88" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1158"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW89" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1159"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW90" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x115A"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW91" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x115B"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW92" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x115C"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW93" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x115D"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW94" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x115E"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW95" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x115F"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW96" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1160"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW97" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1161"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW98" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1162"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW99" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1163"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW100" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1164"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW101" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1165"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW102" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1166"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW103" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1167"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW104" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1168"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW105" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1169"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW106" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x116A"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW107" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x116B"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW108" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x116C"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW109" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x116D"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW110" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x116E"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW111" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x116F"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW112" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1170"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW113" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1171"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW114" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1172"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW115" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1173"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW116" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1174"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW117" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1175"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW118" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1176"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW119" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1177"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW120" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1178"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW121" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1179"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW122" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x117A"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW123" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x117B"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW124" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x117C"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW125" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x117D"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW126" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x117E"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW127" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x117F"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW128" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1180"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW129" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1181"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW130" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1182"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW131" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1183"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW132" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1184"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW133" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1185"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW134" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1186"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW135" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1187"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW136" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1188"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW137" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1189"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW138" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x118A"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW139" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x118B"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW140" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x118C"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW141" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x118D"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW142" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x118E"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW143" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x118F"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW144" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1190"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW145" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1191"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW146" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1192"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW147" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1193"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW148" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1194"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW149" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1195"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW150" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1196"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW151" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1197"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW152" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1198"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW153" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1199"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW154" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x119A"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW155" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x119B"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW156" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x119C"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW157" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x119D"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW158" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x119E"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW159" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x119F"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW160" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11A0"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW161" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11A1"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW162" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11A2"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW163" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11A3"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW164" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11A4"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW165" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11A5"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW166" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11A6"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW167" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11A7"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW168" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11A8"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW169" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11A9"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW170" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11AA"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW171" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11AB"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW172" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11AC"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW173" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11AD"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW174" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11AE"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW175" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11AF"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW176" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11B0"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW177" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11B1"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW178" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11B2"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW179" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11B3"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW180" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11B4"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW181" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11B5"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW182" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11B6"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW183" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11B7"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW184" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11B8"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW185" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11B9"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW186" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11BA"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW187" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11BB"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW188" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11BC"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW189" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11BD"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW190" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11BE"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW191" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11BF"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW192" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11C0"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW193" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11C1"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW194" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11C2"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW195" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11C3"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW196" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11C4"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW197" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11C5"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW198" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11C6"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW199" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11C7"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW200" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11C8"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW201" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11C9"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW202" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11CA"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW203" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11CB"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW204" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11CC"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW205" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11CD"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW206" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11CE"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW207" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11CF"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW208" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11D0"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW209" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11D1"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW210" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11D2"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW211" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11D3"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW212" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11D4"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW213" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11D5"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW214" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11D6"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW215" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11D7"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW216" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11D8"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW217" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11D9"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW218" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11DA"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW219" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11DB"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW220" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11DC"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW221" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11DD"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW222" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11DE"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW223" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11DF"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW224" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11E0"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW225" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11E1"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW226" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11E2"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW227" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11E3"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW228" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11E4"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW229" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11E5"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW230" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11E6"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW231" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11E7"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW232" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11E8"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW233" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11E9"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW234" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11EA"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW235" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11EB"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW236" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11EC"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW237" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11ED"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW238" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11EE"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW239" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11EF"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW240" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11F0"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW241" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11F1"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW242" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11F2"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW243" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11F3"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW244" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11F4"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW245" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11F5"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW246" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11F6"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW247" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11F7"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW248" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11F8"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW249" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11F9"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW250" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11FA"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW251" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11FB"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW252" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11FC"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW253" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11FD"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW254" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11FE"/>
        <edc:SFRDef ltx:memberofperipheral="BOOTROW" edc:cname="BOOTROW255" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x11FF"/>
      </edc:UserIDSector>
      <edc:UserIDSector edc:regionid="USER_SIGNATURES" edc:beginaddr="0x1200" edc:endaddr="0x1400" edc:magicoffset="0x850000" atdf:pagesize="0x200" edc:rw="rw">
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1200"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1201"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1202"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1203"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1204"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1205"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1206"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1207"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1208"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1209"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW10" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x120A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW11" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x120B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW12" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x120C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW13" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x120D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW14" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x120E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW15" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x120F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW16" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1210"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW17" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1211"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW18" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1212"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW19" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1213"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW20" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1214"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW21" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1215"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW22" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1216"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW23" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1217"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW24" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1218"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW25" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1219"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW26" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x121A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW27" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x121B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW28" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x121C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW29" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x121D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW30" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x121E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW31" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x121F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW32" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1220"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW33" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1221"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW34" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1222"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW35" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1223"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW36" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1224"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW37" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1225"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW38" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1226"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW39" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1227"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW40" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1228"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW41" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1229"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW42" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x122A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW43" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x122B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW44" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x122C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW45" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x122D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW46" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x122E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW47" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x122F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW48" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1230"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW49" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1231"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW50" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1232"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW51" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1233"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW52" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1234"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW53" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1235"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW54" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1236"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW55" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1237"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW56" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1238"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW57" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1239"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW58" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x123A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW59" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x123B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW60" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x123C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW61" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x123D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW62" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x123E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW63" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x123F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW64" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1240"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW65" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1241"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW66" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1242"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW67" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1243"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW68" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1244"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW69" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1245"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW70" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1246"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW71" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1247"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW72" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1248"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW73" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1249"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW74" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x124A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW75" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x124B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW76" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x124C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW77" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x124D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW78" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x124E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW79" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x124F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW80" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1250"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW81" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1251"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW82" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1252"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW83" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1253"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW84" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1254"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW85" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1255"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW86" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1256"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW87" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1257"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW88" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1258"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW89" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1259"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW90" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x125A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW91" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x125B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW92" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x125C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW93" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x125D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW94" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x125E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW95" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x125F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW96" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1260"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW97" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1261"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW98" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1262"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW99" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1263"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW100" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1264"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW101" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1265"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW102" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1266"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW103" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1267"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW104" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1268"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW105" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1269"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW106" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x126A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW107" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x126B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW108" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x126C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW109" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x126D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW110" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x126E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW111" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x126F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW112" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1270"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW113" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1271"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW114" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1272"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW115" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1273"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW116" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1274"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW117" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1275"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW118" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1276"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW119" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1277"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW120" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1278"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW121" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1279"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW122" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x127A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW123" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x127B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW124" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x127C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW125" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x127D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW126" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x127E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW127" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x127F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW128" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1280"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW129" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1281"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW130" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1282"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW131" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1283"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW132" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1284"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW133" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1285"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW134" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1286"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW135" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1287"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW136" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1288"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW137" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1289"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW138" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x128A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW139" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x128B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW140" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x128C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW141" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x128D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW142" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x128E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW143" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x128F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW144" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1290"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW145" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1291"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW146" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1292"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW147" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1293"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW148" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1294"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW149" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1295"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW150" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1296"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW151" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1297"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW152" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1298"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW153" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1299"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW154" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x129A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW155" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x129B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW156" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x129C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW157" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x129D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW158" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x129E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW159" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x129F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW160" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12A0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW161" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12A1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW162" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12A2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW163" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12A3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW164" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12A4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW165" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12A5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW166" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12A6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW167" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12A7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW168" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12A8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW169" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12A9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW170" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12AA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW171" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12AB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW172" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12AC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW173" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12AD"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW174" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12AE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW175" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12AF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW176" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12B0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW177" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12B1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW178" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12B2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW179" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12B3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW180" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12B4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW181" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12B5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW182" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12B6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW183" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12B7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW184" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12B8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW185" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12B9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW186" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12BA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW187" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12BB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW188" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12BC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW189" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12BD"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW190" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12BE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW191" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12BF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW192" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12C0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW193" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12C1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW194" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12C2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW195" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12C3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW196" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12C4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW197" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12C5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW198" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12C6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW199" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12C7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW200" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12C8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW201" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12C9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW202" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12CA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW203" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12CB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW204" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12CC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW205" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12CD"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW206" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12CE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW207" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12CF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW208" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12D0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW209" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12D1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW210" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12D2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW211" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12D3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW212" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12D4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW213" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12D5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW214" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12D6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW215" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12D7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW216" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12D8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW217" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12D9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW218" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12DA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW219" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12DB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW220" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12DC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW221" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12DD"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW222" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12DE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW223" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12DF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW224" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12E0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW225" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12E1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW226" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12E2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW227" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12E3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW228" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12E4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW229" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12E5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW230" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12E6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW231" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12E7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW232" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12E8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW233" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12E9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW234" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12EA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW235" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12EB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW236" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12EC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW237" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12ED"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW238" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12EE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW239" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12EF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW240" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12F0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW241" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12F1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW242" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12F2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW243" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12F3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW244" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12F4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW245" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12F5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW246" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12F6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW247" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12F7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW248" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12F8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW249" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12F9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW250" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12FA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW251" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12FB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW252" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12FC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW253" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12FD"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW254" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12FE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW255" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x12FF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW256" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1300"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW257" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1301"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW258" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1302"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW259" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1303"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW260" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1304"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW261" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1305"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW262" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1306"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW263" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1307"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW264" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1308"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW265" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1309"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW266" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW267" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW268" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW269" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW270" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW271" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW272" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1310"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW273" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1311"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW274" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1312"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW275" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1313"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW276" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1314"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW277" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1315"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW278" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1316"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW279" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1317"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW280" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1318"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW281" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1319"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW282" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW283" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW284" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW285" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW286" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW287" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW288" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1320"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW289" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1321"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW290" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1322"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW291" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1323"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW292" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1324"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW293" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1325"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW294" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1326"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW295" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1327"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW296" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1328"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW297" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1329"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW298" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x132A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW299" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x132B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW300" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x132C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW301" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x132D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW302" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x132E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW303" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x132F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW304" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1330"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW305" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1331"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW306" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1332"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW307" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1333"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW308" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1334"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW309" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1335"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW310" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1336"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW311" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1337"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW312" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1338"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW313" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1339"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW314" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x133A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW315" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x133B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW316" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x133C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW317" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x133D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW318" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x133E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW319" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x133F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW320" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1340"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW321" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1341"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW322" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1342"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW323" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1343"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW324" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1344"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW325" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1345"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW326" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1346"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW327" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1347"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW328" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1348"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW329" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1349"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW330" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x134A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW331" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x134B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW332" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x134C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW333" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x134D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW334" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x134E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW335" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x134F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW336" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1350"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW337" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1351"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW338" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1352"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW339" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1353"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW340" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1354"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW341" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1355"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW342" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1356"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW343" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1357"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW344" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1358"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW345" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1359"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW346" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x135A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW347" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x135B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW348" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x135C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW349" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x135D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW350" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x135E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW351" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x135F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW352" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1360"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW353" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1361"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW354" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1362"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW355" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1363"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW356" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1364"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW357" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1365"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW358" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1366"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW359" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1367"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW360" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1368"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW361" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1369"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW362" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x136A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW363" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x136B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW364" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x136C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW365" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x136D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW366" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x136E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW367" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x136F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW368" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1370"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW369" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1371"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW370" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1372"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW371" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1373"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW372" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1374"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW373" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1375"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW374" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1376"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW375" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1377"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW376" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1378"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW377" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1379"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW378" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x137A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW379" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x137B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW380" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x137C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW381" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x137D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW382" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x137E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW383" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x137F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW384" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1380"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW385" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1381"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW386" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1382"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW387" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1383"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW388" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1384"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW389" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1385"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW390" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1386"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW391" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1387"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW392" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1388"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW393" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1389"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW394" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x138A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW395" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x138B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW396" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x138C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW397" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x138D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW398" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x138E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW399" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x138F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW400" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1390"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW401" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1391"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW402" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1392"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW403" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1393"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW404" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1394"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW405" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1395"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW406" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1396"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW407" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1397"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW408" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1398"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW409" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1399"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW410" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x139A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW411" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x139B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW412" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x139C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW413" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x139D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW414" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x139E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW415" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x139F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW416" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13A0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW417" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13A1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW418" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13A2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW419" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13A3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW420" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13A4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW421" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13A5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW422" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13A6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW423" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13A7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW424" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13A8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW425" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13A9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW426" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13AA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW427" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13AB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW428" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13AC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW429" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13AD"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW430" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13AE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW431" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13AF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW432" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13B0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW433" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13B1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW434" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13B2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW435" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13B3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW436" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13B4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW437" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13B5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW438" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13B6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW439" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13B7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW440" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13B8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW441" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13B9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW442" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13BA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW443" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13BB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW444" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13BC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW445" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13BD"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW446" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13BE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW447" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13BF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW448" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13C0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW449" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13C1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW450" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13C2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW451" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13C3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW452" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13C4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW453" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13C5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW454" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13C6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW455" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13C7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW456" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13C8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW457" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13C9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW458" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13CA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW459" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13CB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW460" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13CC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW461" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13CD"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW462" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13CE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW463" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13CF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW464" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13D0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW465" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13D1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW466" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13D2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW467" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13D3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW468" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13D4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW469" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13D5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW470" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13D6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW471" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13D7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW472" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13D8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW473" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13D9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW474" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13DA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW475" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13DB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW476" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13DC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW477" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13DD"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW478" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13DE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW479" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13DF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW480" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13E0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW481" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13E1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW482" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13E2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW483" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13E3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW484" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13E4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW485" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13E5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW486" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13E6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW487" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13E7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW488" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13E8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW489" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13E9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW490" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13EA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW491" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13EB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW492" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13EC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW493" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13ED"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW494" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13EE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW495" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13EF"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW496" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13F0"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW497" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13F1"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW498" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13F2"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW499" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13F3"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW500" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13F4"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW501" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13F5"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW502" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13F6"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW503" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13F7"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW504" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13F8"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW505" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13F9"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW506" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13FA"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW507" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13FB"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW508" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13FC"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW509" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13FD"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW510" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13FE"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW511" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x13FF"/>
      </edc:UserIDSector>
      <edc:EEDataSector edc:regionid="EEPROM" edc:beginaddr="0x811400" edc:endaddr="0x811500" edc:magicoffset="0x810000" atdf:pagesize="0x1" edc:rw="rw"/>
      <edc:GPRDataSector edc:regionid="INTERNAL_SRAM" edc:beginaddr="0x7000" edc:endaddr="0x8000" edc:isexecutable="false" edc:rw="rw"/>
      <edc:GPRDataSector edc:regionid="MAPPED_PROGMEM" edc:beginaddr="0x8000" edc:endaddr="0x10000" atdf:pagesize="0x200" edc:isexecutable="false" edc:rw="rw"/>
    </edc:RegardlessOfMode>
    <edc:RegisterMap edc:id="TCA0/SINGLE">
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0xA00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Module Enable"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER / 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER / 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER / 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER / 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER / 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_PER / 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_PER / 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0xA01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="WGMODE" edc:nzwidth="0x3" edc:desc="Waveform generation mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal Mode" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Frequency Generation Mode" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPE" edc:desc="Single Slope PWM" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual Slope PWM, overflow on TOP" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual Slope PWM, overflow on TOP and BOTTOM" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual Slope PWM, overflow on BOTTOM" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALUPD" edc:nzwidth="0x1" edc:desc="Auto Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMP0EN" edc:nzwidth="0x1" edc:desc="Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1EN" edc:nzwidth="0x1" edc:desc="Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CMP2EN" edc:nzwidth="0x1" edc:desc="Compare 2 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:addr="0xA02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CMP0OV" edc:nzwidth="0x1" edc:desc="Compare 0 Waveform Output Value"/>
            <edc:SFRFieldDef edc:cname="CMP1OV" edc:nzwidth="0x1" edc:desc="Compare 1 Waveform Output Value"/>
            <edc:SFRFieldDef edc:cname="CMP2OV" edc:nzwidth="0x1" edc:desc="Compare 2 Waveform Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA03">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="SPLITM" edc:nzwidth="0x1" edc:desc="Split Mode Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLECLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLESET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="Count up" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DOWN" edc:desc="Count down" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLFCLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="PERBV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP0BV" edc:nzwidth="0x1" edc:desc="Compare 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP1BV" edc:nzwidth="0x1" edc:desc="Compare 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP2BV" edc:nzwidth="0x1" edc:desc="Compare 2 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLFSET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA07">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="PERBV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP0BV" edc:nzwidth="0x1" edc:desc="Compare 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP1BV" edc:nzwidth="0x1" edc:desc="Compare 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP2BV" edc:nzwidth="0x1" edc:desc="Compare 2 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0xA09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CNTAEI" edc:nzwidth="0x1" edc:desc="Count on Event Input A"/>
            <edc:SFRFieldDef edc:cname="EVACTA" edc:nzwidth="0x3" edc:desc="Event Action A">
              <edc:SFRFieldSemantic edc:cname="CNT_POSEDGE" edc:desc="Count on positive edge event" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CNT_ANYEDGE" edc:desc="Count on any edge event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CNT_HIGHLVL" edc:desc="Count on prescaled clock while event line is 1." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="Count on prescaled clock. Event controls count direction. Up-count when event line is 0, down-count when event line is 1." edc:when="(field &amp; 0x7) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTBEI" edc:nzwidth="0x1" edc:desc="Count on Event Input B"/>
            <edc:SFRFieldDef edc:cname="EVACTB" edc:nzwidth="0x3" edc:desc="Event Action B">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="Count on prescaled clock. Event controls count direction. Up-count when event line is 0, down-count when event line is 1." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_POSEDGE" edc:desc="Restart counter at positive edge event" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_ANYEDGE" edc:desc="Restart counter on any edge event" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_HIGHLVL" edc:desc="Restart counter while event line is 1." edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-nnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x71" edc:addr="0xA0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-nnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x71" edc:addr="0xA0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA0F"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA20"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA26"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA28"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA2A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP2" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA2C"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="PERBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA36"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP0BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA38"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP1BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA3A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP2BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA3C"/>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TCA0/SPLIT">
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0xA00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Module Enable"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER / 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER / 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER / 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER / 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER / 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_PER / 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_PER / 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0xA01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LCMP0EN" edc:nzwidth="0x1" edc:desc="Low Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP1EN" edc:nzwidth="0x1" edc:desc="Low Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP2EN" edc:nzwidth="0x1" edc:desc="Low Compare 2 Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HCMP0EN" edc:nzwidth="0x1" edc:desc="High Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="HCMP1EN" edc:nzwidth="0x1" edc:desc="High Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="HCMP2EN" edc:nzwidth="0x1" edc:desc="High Compare 2 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0xA02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LCMP0OV" edc:nzwidth="0x1" edc:desc="Low Compare 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="LCMP1OV" edc:nzwidth="0x1" edc:desc="Low Compare 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="LCMP2OV" edc:nzwidth="0x1" edc:desc="Low Compare 2 Output Value"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HCMP0OV" edc:nzwidth="0x1" edc:desc="High Compare 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="HCMP1OV" edc:nzwidth="0x1" edc:desc="High Compare 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="HCMP2OV" edc:nzwidth="0x1" edc:desc="High Compare 2 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA03">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="SPLITM" edc:nzwidth="0x1" edc:desc="Split Mode Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLECLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CMDEN" edc:nzwidth="0x2" edc:desc="Command Enable">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both low byte and high byte counter" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLESET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CMDEN" edc:nzwidth="0x2" edc:desc="Command Enable">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both low byte and high byte counter" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-nnn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:addr="0xA0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LUNF" edc:nzwidth="0x1" edc:desc="Low Underflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="HUNF" edc:nzwidth="0x1" edc:desc="High Underflow Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LCMP0" edc:nzwidth="0x1" edc:desc="Low Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP1" edc:nzwidth="0x1" edc:desc="Low Compare 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP2" edc:nzwidth="0x1" edc:desc="Low Compare 2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-nnn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:addr="0xA0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LUNF" edc:nzwidth="0x1" edc:desc="Low Underflow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="HUNF" edc:nzwidth="0x1" edc:desc="High Underflow Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LCMP0" edc:nzwidth="0x1" edc:desc="Low Compare 2 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="LCMP1" edc:nzwidth="0x1" edc:desc="Low Compare 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="LCMP2" edc:nzwidth="0x1" edc:desc="Low Compare 0 Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA20"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA21"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LPER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA26"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HPER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA27"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA28"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA29"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2B"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2C"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2D"/>
    </edc:RegisterMap>
  </edc:DataSpace>
  <edc:PinList edc:ppsflavor="atmel">
    <edc:Pin>
      <edc:VirtualPin edc:name="PA3"/>
      <edc:VirtualPin edc:name="AIN23" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT0_OUT" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0_ALT2" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="I2C0" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="I2C0_ALT1" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="WO0B1" edc:ppsfunction="TCB1" ltx:memberofperipheral="TCB1"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA4"/>
      <edc:VirtualPin edc:name="AIN24" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0_ALT1" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO4A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA5"/>
      <edc:VirtualPin edc:name="AIN25" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0_ALT1" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO5A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA6"/>
      <edc:VirtualPin edc:name="AIN26" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT0_OUT" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART0_ALT1" ltx:memberofperipheral="USART0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA7"/>
      <edc:VirtualPin edc:name="AIN27" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="CLKOUT" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="EVOUT0" edc:ppsfunction="EVSYS_ALT1" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="OUT" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART0_ALT1" ltx:memberofperipheral="USART0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VUSB"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="DM" edc:ppsfunction="DEFAULT" ltx:memberofperipheral="USB0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="DP" edc:ppsfunction="DEFAULT" ltx:memberofperipheral="USB0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC3"/>
      <edc:VirtualPin edc:name="AIN31" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="AINP4" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="LUT1_OUT" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0_ALT2" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD0"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="AINN1" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="LUT2_IN0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="LUT2_IN0" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD1"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT2_IN1" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="LUT2_IN1" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD2"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="AINP0" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="EVOUT3" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT2_IN2" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="LUT2_IN2" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD3"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="AINN0" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="LUT2_OUT" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD4"/>
      <edc:VirtualPin edc:name="AIN4" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI0_ALT4" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0_ALT3" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO4A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD5"/>
      <edc:VirtualPin edc:name="AIN5" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI0_ALT4" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0_ALT3" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO5A0" edc:ppsfunction="TCA0_ALT3" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD6"/>
      <edc:VirtualPin edc:name="AIN6" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="AINP3" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="LUT2_OUT" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI0_ALT4" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART1_ALT2" ltx:memberofperipheral="USART1"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART0_ALT3" ltx:memberofperipheral="USART0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PD7"/>
      <edc:VirtualPin edc:name="AIN7" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="AINN2" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="EVOUT3" edc:ppsfunction="EVSYS_ALT1" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTD"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART1_ALT2" ltx:memberofperipheral="USART1"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI0_ALT4" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART0_ALT3" ltx:memberofperipheral="USART0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GND1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF0"/>
      <edc:VirtualPin edc:name="AIN16" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT3_IN0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XTAL32K1" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF1"/>
      <edc:VirtualPin edc:name="AIN17" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT3_IN1" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XTAL32K2" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF2"/>
      <edc:VirtualPin edc:name="AIN18" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVOUT5" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT3_IN2" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF3"/>
      <edc:VirtualPin edc:name="AIN19" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT3_OUT" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF4"/>
      <edc:VirtualPin edc:name="AIN20" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="WO0B0" edc:ppsfunction="TCB0_ALT1" ltx:memberofperipheral="TCB0"/>
      <edc:VirtualPin edc:name="WO4A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF5"/>
      <edc:VirtualPin edc:name="AIN21" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="WO0B1" edc:ppsfunction="TCB1_ALT1" ltx:memberofperipheral="TCB1"/>
      <edc:VirtualPin edc:name="WO5A0" edc:ppsfunction="TCA0_ALT5" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF6"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
      <edc:VirtualPin edc:name="RESET" edc:ppsfunction="OTHER" ltx:memberofperipheral="RSTCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PF7"/>
      <edc:VirtualPin edc:name="EVOUT5" edc:ppsfunction="EVSYS_ALT1" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTF"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GND0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA0"/>
      <edc:VirtualPin edc:name="EXTCLK" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="LUT0_IN0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="LUT0_IN0" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="I2C0_ALT3" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XTAL32K1" edc:ppsfunction="CLKCTRL_ALT1" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="XTALHF1" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA1"/>
      <edc:VirtualPin edc:name="LUT0_IN1" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="LUT0_IN1" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="I2C0_ALT3" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XTAL32K2" edc:ppsfunction="CLKCTRL_ALT1" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="XTALHF2" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA2"/>
      <edc:VirtualPin edc:name="AIN22" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVOUT0" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT0_IN2" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="LUT0_IN2" edc:ppsfunction="CCL_ALT1" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="I2C0" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="I2C0_ALT1" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0_ALT2" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO0B0" edc:ppsfunction="TCB0" ltx:memberofperipheral="TCB0"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
    </edc:Pin>
  </edc:PinList>
</edc:PIC>
